{"ast":null,"code":"var _jsxFileName = \"/home/jasper/Documents/Uni/BachelorArbeit/XM/frontend/src/components/make/Exam/index.tsx\";\nimport React, { useContext, useState } from \"react\";\nimport { v4 } from \"uuid\";\nimport { useForm } from \"react-hook-form\";\nimport { Input, Badge, Heading, Flex, Select, Button } from \"theme-ui\";\nimport { ExamContext } from \"../../../services/examContext\";\nimport HttpService from \"../../../services/http\";\nexport default function Exam() {\n  const {\n    allQuestions,\n    allUsers\n  } = useContext(ExamContext);\n  const [newExamState, setNewExamState] = useState({\n    addedUsers: [],\n    addedQuestions: []\n  });\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors,\n    reset,\n    getValues\n  } = useForm();\n\n  const addUser = () => {\n    const newUser = getValues().newUser;\n\n    if (!newExamState.addedUsers.find(el => newUser === el)) {\n      setNewExamState(old => ({ ...old,\n        addedUsers: [...old.addedUsers, newUser]\n      }));\n    }\n  };\n\n  const addQuestion = () => {\n    const newQuestion = getValues().newQuestion;\n\n    if (!newExamState.addedQuestions.find(el => newQuestion === el)) {\n      setNewExamState(old => ({ ...old,\n        addedQuestions: [...old.addedQuestions, newQuestion]\n      }));\n    }\n  };\n\n  const onSubmit = data => {\n    HttpService;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    as: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Create New Exam\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(() => {}),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    sx: {\n      flexDirection: \"column\",\n      alignItems: \"flex-start\",\n      justifyContent: \"stretch\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    sx: {\n      marginTop: \"1rem\"\n    },\n    ref: register,\n    name: \"questionTitle\",\n    placeholder: \"Provide a Exam Title here\",\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Flex, {\n    sx: {\n      flexDirection: \"row\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, newExamState.addedUsers.map(el => {\n    const person = JSON.parse(el);\n    return /*#__PURE__*/React.createElement(Badge, {\n      sx: {\n        margin: \"0.5rem\"\n      },\n      key: v4(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, person.name);\n  })), /*#__PURE__*/React.createElement(Flex, {\n    sx: {\n      flexDirection: \"row\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    sx: {\n      margin: \"0.5rem\"\n    },\n    ref: register,\n    name: \"newUser\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, allUsers.rows.map(el => {\n    console.log(el);\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: v4(),\n      value: JSON.stringify(el),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 19\n      }\n    }, el.name);\n  })), /*#__PURE__*/React.createElement(Button, {\n    sx: {\n      margin: \"0.5rem\"\n    },\n    onClick: addUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(Flex, {\n    sx: {\n      flexDirection: \"row\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, newExamState.addedQuestions.map(el => {\n    const question = JSON.parse(el);\n    return /*#__PURE__*/React.createElement(Badge, {\n      sx: {\n        margin: \"0.5rem\"\n      },\n      key: v4(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, question.content.title);\n  })), /*#__PURE__*/React.createElement(Flex, {\n    sx: {\n      flexDirection: \"row\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    sx: {\n      margin: \"0.5rem\"\n    },\n    ref: register,\n    name: \"newQuestion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, allQuestions.rows.map(el => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: v4(),\n      value: JSON.stringify(el),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }, el.content.title);\n  })), /*#__PURE__*/React.createElement(Button, {\n    sx: {\n      margin: \"0.5rem\"\n    },\n    onClick: addQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, \"+\"))), /*#__PURE__*/React.createElement(Button, {\n    variant: \"warning\",\n    onClick: () => {\n      setNewExamState({\n        addedUsers: [],\n        addedQuestions: []\n      });\n      reset();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, \"reset\"), /*#__PURE__*/React.createElement(Button, {\n    sx: {\n      marginLeft: \"0.5rem\"\n    },\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, \"Save\")));\n}","map":{"version":3,"sources":["/home/jasper/Documents/Uni/BachelorArbeit/XM/frontend/src/components/make/Exam/index.tsx"],"names":["React","useContext","useState","v4","useForm","Input","Badge","Heading","Flex","Select","Button","ExamContext","HttpService","Exam","allQuestions","allUsers","newExamState","setNewExamState","addedUsers","addedQuestions","register","handleSubmit","watch","errors","reset","getValues","addUser","newUser","find","el","old","addQuestion","newQuestion","onSubmit","data","flexDirection","alignItems","justifyContent","marginTop","map","person","JSON","parse","margin","name","rows","console","log","stringify","question","content","title","marginLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\nimport { v4 } from \"uuid\";\nimport { useForm } from \"react-hook-form\";\nimport { Input, Badge, Heading, Flex, Select, Button } from \"theme-ui\";\n\nimport { ExamContext } from \"../../../services/examContext\";\nimport { findAllByAltText } from \"@testing-library/react\";\nimport HttpService from \"../../../services/http\";\n\nexport default function Exam() {\n  const { allQuestions, allUsers } = useContext(ExamContext);\n\n  const [newExamState, setNewExamState] = useState({\n    addedUsers: [],\n    addedQuestions: [],\n  });\n  const { register, handleSubmit, watch, errors, reset, getValues } = useForm();\n\n  const addUser = () => {\n    const newUser = getValues().newUser;\n    if (!newExamState.addedUsers.find((el) => newUser === el)) {\n      setNewExamState((old) => ({\n        ...old,\n        addedUsers: [...old.addedUsers, newUser],\n      }));\n    }\n  };\n  const addQuestion = () => {\n    const newQuestion = getValues().newQuestion;\n    if (!newExamState.addedQuestions.find((el) => newQuestion === el)) {\n      setNewExamState((old) => ({\n        ...old,\n        addedQuestions: [...old.addedQuestions, newQuestion],\n      }));\n    }\n  };\n\n  const onSubmit = (data) => {\n    HttpService\n  };\n\n  return (\n    <div>\n      <Heading as=\"h2\">Create New Exam</Heading>\n      <form onSubmit={handleSubmit(() => {})}>\n        <Flex\n          sx={{\n            flexDirection: \"column\",\n            alignItems: \"flex-start\",\n            justifyContent: \"stretch\",\n          }}\n        >\n          <Input\n            sx={{ marginTop: \"1rem\" }}\n            ref={register}\n            name={\"questionTitle\"}\n            placeholder=\"Provide a Exam Title here\"\n            defaultValue={\"\"}\n          />\n\n          <Flex\n            sx={{\n              flexDirection: \"row\",\n            }}\n          >\n            {newExamState.addedUsers.map((el) => {\n              const person = JSON.parse(el);\n              return (\n                <Badge sx={{ margin: \"0.5rem\" }} key={v4()}>\n                  {person.name}\n                </Badge>\n              );\n            })}\n          </Flex>\n          <Flex\n            sx={{\n              flexDirection: \"row\",\n            }}\n          >\n            <Select sx={{ margin: \"0.5rem\" }} ref={register} name=\"newUser\">\n              {allUsers.rows.map((el) => {\n                console.log(el);\n                return (\n                  <option key={v4()} value={JSON.stringify(el)}>\n                    {el.name}\n                  </option>\n                );\n              })}\n            </Select>\n            <Button sx={{ margin: \"0.5rem\" }} onClick={addUser}>\n              +\n            </Button>\n          </Flex>\n          <Flex\n            sx={{\n              flexDirection: \"row\",\n            }}\n          >\n            {newExamState.addedQuestions.map((el) => {\n              const question = JSON.parse(el);\n              return (\n                <Badge sx={{ margin: \"0.5rem\" }} key={v4()}>\n                  {question.content.title}\n                </Badge>\n              );\n            })}\n          </Flex>\n          <Flex\n            sx={{\n              flexDirection: \"row\",\n            }}\n          >\n            <Select sx={{ margin: \"0.5rem\" }} ref={register} name=\"newQuestion\">\n              {allQuestions.rows.map((el) => {\n                return (\n                  <option key={v4()} value={JSON.stringify(el)}>\n                    {el.content.title}\n                  </option>\n                );\n              })}\n            </Select>\n            <Button sx={{ margin: \"0.5rem\" }} onClick={addQuestion}>\n              +\n            </Button>\n          </Flex>\n        </Flex>\n        <Button\n          variant=\"warning\"\n          onClick={() => {\n            setNewExamState({ addedUsers: [], addedQuestions: [] });\n            reset();\n          }}\n        >\n          reset\n        </Button>\n        <Button sx={{ marginLeft: \"0.5rem\" }} type=\"submit\">\n          Save\n        </Button>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}