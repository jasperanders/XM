{"ast":null,"code":"var _jsxFileName = \"/home/jasper/Documents/Uni/BachelorArbeit/XM/src/components/question/questionType/FreeTextQuestion.tsx\";\nimport React from \"react\";\nimport { freeTextFromName } from \"../../../constants/formConstants\";\nimport { Textarea, Button } from \"theme-ui\";\nexport default function FreeTexTFreeTextQuestion({\n  register,\n  handleSubmit,\n  watch,\n  errors,\n  question\n}) {\n  const onSubmit = data => {\n    let action = undefined;\n\n    switch (answerType) {\n      case \"freeText\":\n        const answer = data[freeTextFromName];\n        const payload = {\n          questionId,\n          answer\n        };\n        action = answerFreeTextQuestion(payload);\n        break;\n\n      default:\n        break;\n    }\n\n    dispatch(action);\n    dispatch(seTFreeTextQuestionEndTime({\n      questionId\n    }));\n    dispatch(nexTFreeTextQuestion());\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Textarea, {\n    rows: 10,\n    columns: 20,\n    onPaste: e => {\n      e.preventDefault();\n      return false;\n    },\n    onCopy: e => {\n      e.preventDefault();\n      return false;\n    },\n    name: freeTextFromName,\n    defaultValue: question.storedAnswer,\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Save and Next Question\"));\n}","map":{"version":3,"sources":["/home/jasper/Documents/Uni/BachelorArbeit/XM/src/components/question/questionType/FreeTextQuestion.tsx"],"names":["React","freeTextFromName","Textarea","Button","FreeTexTFreeTextQuestion","register","handleSubmit","watch","errors","question","onSubmit","data","action","undefined","answerType","answer","payload","questionId","answerFreeTextQuestion","dispatch","seTFreeTextQuestionEndTime","nexTFreeTextQuestion","e","preventDefault","storedAnswer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,kCAAjC;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,UAAjC;AAEA,eAAe,SAASC,wBAAT,CAAkC;AAC/CC,EAAAA,QAD+C;AAE/CC,EAAAA,YAF+C;AAG/CC,EAAAA,KAH+C;AAI/CC,EAAAA,MAJ+C;AAK/CC,EAAAA;AAL+C,CAAlC,EAMZ;AACD,QAAMC,QAAQ,GAAIC,IAAD,IAAU;AACzB,QAAIC,MAAM,GAAGC,SAAb;;AACA,YAAQC,UAAR;AACE,WAAK,UAAL;AACE,cAAMC,MAAM,GAAGJ,IAAI,CAACV,gBAAD,CAAnB;AACA,cAAMe,OAAO,GAAG;AAAEC,UAAAA,UAAF;AAAcF,UAAAA;AAAd,SAAhB;AACAH,QAAAA,MAAM,GAAGM,sBAAsB,CAACF,OAAD,CAA/B;AACA;;AAEF;AACE;AARJ;;AAWAG,IAAAA,QAAQ,CAACP,MAAD,CAAR;AACAO,IAAAA,QAAQ,CAACC,0BAA0B,CAAC;AAAEH,MAAAA;AAAF,KAAD,CAA3B,CAAR;AACAE,IAAAA,QAAQ,CAACE,oBAAoB,EAArB,CAAR;AACD,GAhBD;;AAkBA,sBACE;AAAM,IAAA,QAAQ,EAAEf,YAAY,CAACI,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAE,EADR;AAEE,IAAA,OAAO,EAAE,EAFX;AAGE,IAAA,OAAO,EAAGY,CAAD,IAAO;AACdA,MAAAA,CAAC,CAACC,cAAF;AACA,aAAO,KAAP;AACD,KANH;AAOE,IAAA,MAAM,EAAGD,CAAD,IAAO;AACbA,MAAAA,CAAC,CAACC,cAAF;AACA,aAAO,KAAP;AACD,KAVH;AAWE,IAAA,IAAI,EAAEtB,gBAXR;AAYE,IAAA,YAAY,EAAEQ,QAAQ,CAACe,YAZzB;AAaE,IAAA,GAAG,EAAEnB,QAbP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAgBE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAhBF,CADF;AAoBD","sourcesContent":["import React from \"react\";\nimport { freeTextFromName } from \"../../../constants/formConstants\";\nimport { Textarea, Button } from \"theme-ui\";\n\nexport default function FreeTexTFreeTextQuestion({\n  register,\n  handleSubmit,\n  watch,\n  errors,\n  question,\n}) {\n  const onSubmit = (data) => {\n    let action = undefined;\n    switch (answerType) {\n      case \"freeText\":\n        const answer = data[freeTextFromName];\n        const payload = { questionId, answer };\n        action = answerFreeTextQuestion(payload);\n        break;\n\n      default:\n        break;\n    }\n\n    dispatch(action);\n    dispatch(seTFreeTextQuestionEndTime({ questionId }));\n    dispatch(nexTFreeTextQuestion());\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Textarea\n        rows={10}\n        columns={20}\n        onPaste={(e) => {\n          e.preventDefault();\n          return false;\n        }}\n        onCopy={(e) => {\n          e.preventDefault();\n          return false;\n        }}\n        name={freeTextFromName}\n        defaultValue={question.storedAnswer}\n        ref={register}\n      />\n      <Button type=\"submit\">Save and Next Question</Button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}