{"ast":null,"code":"var _jsxFileName = \"/home/jasper/Documents/Uni/BachelorArbeit/XM/frontend/src/routes/index.tsx\";\nimport React, { lazy, useContext } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport TakeExam from \"./takeExam\";\nimport MakeExam from \"./makeExam\";\nimport Layout from \"../components/layout/Layout\";\nimport ExamProgress from \"../components/head/ExamProgress\";\nimport { useSelector } from \"react-redux\";\nimport Login from \"./login\";\nimport { UserContext } from \"../services/userContext\";\nconst ExamEnd = lazy(() => import(\".cache/mdx.macro/examEnd.735b6a51ba.mdx.js\"));\nexport default function Routes() {\n  const value = useContext(UserContext);\n  const examFinished = useSelector(state => state.examState.examFinished);\n\n  const makeRoutes = () => {\n    if (user === \"user\") {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }\n      }, examFinished ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/exam/done/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }\n      }) : /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/exam/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/exam/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }, examFinished ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/exam/done/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }\n      }) : /*#__PURE__*/React.createElement(TakeExam, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 61\n        }\n      })), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/exam/done/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }, examFinished ? /*#__PURE__*/React.createElement(Layout, {\n        header: /*#__PURE__*/React.createElement(ExamProgress, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 31\n          }\n        }),\n        mainContent: /*#__PURE__*/React.createElement(ExamEnd, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 62\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }\n      }) : /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/exam/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Route, {\n        path: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/exam/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      })));\n    } else if (user === \"admin\") {\n      return /*#__PURE__*/React.createElement(Route, {\n        path: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(MakeExam, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Route, {\n        path: \"/login/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Login, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Route, {\n        path: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      })));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 10\n    }\n  }, makeRoutes());\n}","map":{"version":3,"sources":["/home/jasper/Documents/Uni/BachelorArbeit/XM/frontend/src/routes/index.tsx"],"names":["React","lazy","useContext","Switch","Route","Redirect","TakeExam","MakeExam","Layout","ExamProgress","useSelector","Login","UserContext","ExamEnd","Routes","value","examFinished","state","examState","makeRoutes","user"],"mappings":"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","sourcesContent":["import React, { lazy, useState, useContext } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport TakeExam from \"./takeExam\";\nimport MakeExam from \"./makeExam\";\nimport Layout from \"../components/layout/Layout\";\nimport { importMDX } from \"mdx.macro\";\nimport ExamProgress from \"../components/head/ExamProgress\";\nimport { useSelector } from \"react-redux\";\nimport { TRootState } from \"../types/examTypes\";\nimport Login from \"./login\";\nimport { UserContext } from \"../services/userContext\";\nconst ExamEnd = lazy(() => importMDX(\"../mdx/examEnd.mdx\"));\n\nexport default function Routes() {\n  const value = useContext(UserContext);\n  const examFinished = useSelector(\n    (state: TRootState) => state.examState.examFinished\n  );\n  \n\n  const makeRoutes = () => {\n    if (user === \"user\") {\n      return (\n        <>\n          <Route exact path=\"/\">\n            {examFinished ? (\n              <Redirect to=\"/exam/done/\" />\n            ) : (\n              <Redirect to=\"/exam/\" />\n            )}\n          </Route>\n          <Route exact path=\"/exam/\">\n            {examFinished ? <Redirect to=\"/exam/done/\" /> : <TakeExam />}\n          </Route>\n          <Route exact path=\"/exam/done/\">\n            {examFinished ? (\n              <Layout header={<ExamProgress />} mainContent={<ExamEnd />} />\n            ) : (\n              <Redirect to=\"/exam/\" />\n            )}\n          </Route>\n          <Route path=\"/\">\n            <Redirect to=\"/exam/\" />\n          </Route>\n        </>\n      );\n    } else if (user === \"admin\") {\n      return (\n        <Route path=\"/\">\n          <MakeExam />\n        </Route>\n      );\n    } else {\n      return (\n        <>\n          <Route path=\"/login/\">\n            <Login />\n          </Route>\n          <Route path=\"/\">\n            <Redirect to=\"/login/\" />\n          </Route>\n        </>\n      );\n    }\n  };\n\n  return <Switch>{makeRoutes()}</Switch>;\n}\n"]},"metadata":{},"sourceType":"module"}