{"ast":null,"code":"import React from\"react\";import{Styled,Button}from\"theme-ui\";import{useSelector,useDispatch}from\"react-redux\";import{setCurrentQuestionId}from\"../../../redux/actions\";var QuestionList=function QuestionList(){var questions=useSelector(function(state){return state.questionTable;});var dispatch=useDispatch();return/*#__PURE__*/React.createElement(Styled.table,null,questions.allIds.map(function(id,idx){var odd=idx%2===0?\"odd\":\"even\";return/*#__PURE__*/React.createElement(Styled.tr,{variant:odd},/*#__PURE__*/React.createElement(Styled.td,null,questions.byId[id].title),/*#__PURE__*/React.createElement(Styled.td,null,questions.byId[id].text),/*#__PURE__*/React.createElement(Styled.td,null,/*#__PURE__*/React.createElement(Button,{variant:\"tiny\",onClick:function onClick(){dispatch(setCurrentQuestionId({newQuestionId:id,newQuestionIndex:null}));}},\"Show\")));}),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return dispatch(setCurrentQuestionId({newQuestionId:null,newQuestionIndex:null}));}},\"New question\"));};export default QuestionList;","map":{"version":3,"sources":["/home/jasper/Documents/Uni/BachelorArbeit/XM/frontend/src/components/side/makeSidePanel/QuestionList.tsx"],"names":["React","Styled","Button","useSelector","useDispatch","setCurrentQuestionId","QuestionList","questions","state","questionTable","dispatch","allIds","map","id","idx","odd","byId","title","text","newQuestionId","newQuestionIndex"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,CAAiBC,MAAjB,KAA+B,UAA/B,CAEA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,oBAAT,KAAqC,wBAArC,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,GAAMC,CAAAA,SAAS,CAAGJ,WAAW,CAAC,SAACK,KAAD,QAAuBA,CAAAA,KAAK,CAACC,aAA7B,EAAD,CAA7B,CAEA,GAAMC,CAAAA,QAAQ,CAAGN,WAAW,EAA5B,CAEA,mBACE,oBAAC,MAAD,CAAQ,KAAR,MACGG,SAAS,CAACI,MAAV,CAAiBC,GAAjB,CAAqB,SAACC,EAAD,CAAKC,GAAL,CAAa,CACjC,GAAMC,CAAAA,GAAG,CAAGD,GAAG,CAAG,CAAN,GAAY,CAAZ,CAAgB,KAAhB,CAAwB,MAApC,CACA,mBACE,oBAAC,MAAD,CAAQ,EAAR,EAAW,OAAO,CAAEC,GAApB,eACE,oBAAC,MAAD,CAAQ,EAAR,MAAYR,SAAS,CAACS,IAAV,CAAeH,EAAf,EAAmBI,KAA/B,CADF,cAEE,oBAAC,MAAD,CAAQ,EAAR,MAAYV,SAAS,CAACS,IAAV,CAAeH,EAAf,EAAmBK,IAA/B,CAFF,cAGE,oBAAC,MAAD,CAAQ,EAAR,mBACE,oBAAC,MAAD,EACE,OAAO,CAAC,MADV,CAEE,OAAO,CAAE,kBAAM,CACbR,QAAQ,CACNL,oBAAoB,CAAC,CACnBc,aAAa,CAAEN,EADI,CAEnBO,gBAAgB,CAAE,IAFC,CAAD,CADd,CAAR,CAMD,CATH,SADF,CAHF,CADF,CAqBD,CAvBA,CADH,cAyBE,oBAAC,MAAD,EACE,OAAO,CAAE,yBACPV,CAAAA,QAAQ,CACNL,oBAAoB,CAAC,CACnBc,aAAa,CAAE,IADI,CAEnBC,gBAAgB,CAAE,IAFC,CAAD,CADd,CADD,EADX,iBAzBF,CADF,CAwCD,CA7CD,CA+CA,cAAed,CAAAA,YAAf","sourcesContent":["import React from \"react\";\nimport { Styled, Button } from \"theme-ui\";\nimport { TRootState } from \"../../../types/examTypes\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setCurrentQuestionId } from \"../../../redux/actions\";\n\nconst QuestionList = () => {\n  const questions = useSelector((state: TRootState) => state.questionTable);\n\n  const dispatch = useDispatch();\n\n  return (\n    <Styled.table>\n      {questions.allIds.map((id, idx) => {\n        const odd = idx % 2 === 0 ? \"odd\" : \"even\";\n        return (\n          <Styled.tr variant={odd}>\n            <Styled.td>{questions.byId[id].title}</Styled.td>\n            <Styled.td>{questions.byId[id].text}</Styled.td>\n            <Styled.td>\n              <Button\n                variant=\"tiny\"\n                onClick={() => {\n                  dispatch(\n                    setCurrentQuestionId({\n                      newQuestionId: id,\n                      newQuestionIndex: null,\n                    })\n                  );\n                }}\n              >\n                Show\n              </Button>\n            </Styled.td>\n          </Styled.tr>\n        );\n      })}\n      <Button\n        onClick={() =>\n          dispatch(\n            setCurrentQuestionId({\n              newQuestionId: null,\n              newQuestionIndex: null,\n            })\n          )\n        }\n      >\n        New question\n      </Button>\n    </Styled.table>\n  );\n};\n\nexport default QuestionList;\n"]},"metadata":{},"sourceType":"module"}