{"ast":null,"code":"import { combineReducers } from \"@reduxjs/toolkit\";\nimport { ANSWER_QUESTION, START_TIMER, END_TIMER } from \"./actions\";\nconst question = combineReducers({\n  answer,\n  time\n});\n\nfunction answer(state = \"\", {\n  type,\n  payload\n}) {\n  switch (type) {\n    case ANSWER_QUESTION:\n      return state;\n\n    default:\n      return state;\n  }\n}\n\nfunction time(state = 0, {\n  type,\n  payload\n}) {\n  switch (type) {\n    case START_TIMER:\n      return state;\n\n    case END_TIMER:\n      return state;\n\n    default:\n      return state;\n  }\n}\n\nexport const rootReducer = combineReducers({\n  exam\n});\nexport default rootReducer;","map":{"version":3,"sources":["/home/jasper/Documents/Uni/BachelorArbeit/my-app/src/app/reducers.ts"],"names":["combineReducers","ANSWER_QUESTION","START_TIMER","END_TIMER","question","answer","time","state","type","payload","rootReducer","exam"],"mappings":"AAAA,SAASA,eAAT,QAAgC,kBAAhC;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAwD,WAAxD;AAMA,MAAMC,QAAQ,GAAGJ,eAAe,CAAC;AAC/BK,EAAAA,MAD+B;AAE/BC,EAAAA;AAF+B,CAAD,CAAhC;;AAKA,SAASD,MAAT,CAAgBE,KAAa,GAAG,EAAhC,EAAoC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAApC,EAAuD;AACrD,UAAQD,IAAR;AACE,SAAKP,eAAL;AACE,aAAOM,KAAP;;AAEF;AACE,aAAOA,KAAP;AALJ;AAOD;;AAED,SAASD,IAAT,CAAcC,KAAa,GAAG,CAA9B,EAAiC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAjC,EAAoD;AAClD,UAAQD,IAAR;AACE,SAAKN,WAAL;AACE,aAAOK,KAAP;;AAEF,SAAKJ,SAAL;AACE,aAAOI,KAAP;;AAEF;AACE,aAAOA,KAAP;AARJ;AAUD;;AAED,OAAO,MAAMG,WAAW,GAAGV,eAAe,CAAC;AACzCW,EAAAA;AADyC,CAAD,CAAnC;AAKP,eAAeD,WAAf","sourcesContent":["import { combineReducers } from \"@reduxjs/toolkit\";\nimport { ANSWER_QUESTION, START_TIMER, END_TIMER } from \"./actions\";\nimport { initialState } from \"./initialState\";\n\n\n\n\nconst question = combineReducers({\n  answer,\n  time,\n});\n\nfunction answer(state: string = \"\", { type, payload }) {\n  switch (type) {\n    case ANSWER_QUESTION:\n      return state;\n\n    default:\n      return state;\n  }\n}\n\nfunction time(state: number = 0, { type, payload }) {\n  switch (type) {\n    case START_TIMER:\n      return state;\n\n    case END_TIMER:\n      return state;\n\n    default:\n      return state;\n  }\n}\n\nexport const rootReducer = combineReducers({\n  exam,\n});\n\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}