{"ast":null,"code":"import { v4 } from \"uuid\";\n// ============== Task 01 ===================\nconst question_01 = {\n  questionId: v4(),\n  questionType: \"freeText\",\n  timeLimitMs: 5000,\n  title: \"That is the Question\",\n  text: \"What does the Fox say?\"\n};\nconst answer_01 = {\n  answerId: v4(),\n  questionId: question_01.questionId,\n  timeStart: null,\n  timeEnd: null,\n  timeExpired: false\n};\nconst question_01_body = {\n  questionBodyId: v4(),\n  questionId: question_01.questionId\n};\nconst answer_01_body = {\n  answerId: question_01.questionId,\n  questionId: question_01_body.questionBodyId,\n  answerBodyId: v4(),\n  answerText: \"\"\n}; // ============== Task 02 ===================\n\nconst question_02 = {\n  questionId: v4(),\n  questionType: \"freeText\",\n  timeLimitMs: 5000,\n  title: \"Even better Question\",\n  text: \"How many roads must a man walk down?\"\n};\nconst answer_02 = {\n  answerId: v4(),\n  questionId: question_02.questionId,\n  timeStart: null,\n  timeEnd: null,\n  timeExpired: false\n};\nconst question_02_body = {\n  questionBodyId: v4(),\n  questionId: question_02.questionId\n};\nconst answer_02_body = {\n  answerBodyId: v4(),\n  questionId: question_02.questionId,\n  answerId: answer_02.answerId,\n  answerText: \"\"\n}; // ============== Task 03 ===================\n\nconst question_03 = {\n  questionId: v4(),\n  questionType: \"multipleChoice\",\n  bodyId: question_03_body.questionBodyId,\n  timeLimitMs: 5000,\n  title: \"Your choice\",\n  text: \"Yes or No?\"\n};\nconst answer_03 = {\n  answerId: v4(),\n  questionId: question_03.questionId,\n  bodyId: answer_03_body.answerBodyId,\n  timeStart: null,\n  timeEnd: null,\n  timeExpired: false\n};\nconst question_03_body = {\n  questionBodyId: v4(),\n  possibleAnswers: [\"Yes\", \"No\"]\n};\nconst answer_03_body = {\n  answerBodyId: v4(),\n  selectedAnswers: []\n}; // =============== exam_01 ===========\n\nconst exam_01 = {\n  examId: v4(),\n  name: \"Platform Economy\",\n  questionsById: [question_01.questionId, question_02.questionId, question_03.questionId]\n}; // =============== tables ================\n\nexport const initialQuestionTable = {\n  byId: {\n    [question_01.questionId]: question_01,\n    [question_02.questionId]: question_02,\n    [question_03.questionId]: question_03\n  },\n  allIds: [question_01.questionId, question_02.questionId, question_03.questionId]\n};\nexport const initialAnswerTable = {\n  byId: {\n    [answer_01.questionId]: answer_01,\n    [answer_02.questionId]: answer_02,\n    [answer_03.questionId]: answer_03\n  },\n  allIds: [answer_01.answerId, answer_02.answerId, answer_03.answerId]\n};\nexport const initialExamTable = {\n  byId: {\n    [exam_01.examId]: exam_01\n  },\n  allIds: [exam_01.examId]\n}; // ================ Body Table ===================\n\nexport const initialQuestionBodyFreeTextTable = {\n  byId: {\n    [question_01_body.questionBodyId]: question_01_body,\n    [question_02_body.questionBodyId]: question_02_body\n  },\n  allIds: [question_01_body.questionBodyId, question_02_body.questionBodyId]\n};\nexport const initialQuestionBodyMultipleChoiceTable = {\n  byId: {\n    [question_03_body.questionBodyId]: question_03_body\n  },\n  allIds: [question_03_body.questionBodyId]\n};\nexport const initialAnswerBodyFreeTextTable = {\n  byId: {\n    [answer_01_body.answerBodyId]: answer_01_body,\n    [answer_02_body.answerBodyId]: answer_02_body\n  },\n  allIds: [answer_03_body.answerBodyId]\n};\nexport const initialAnswerBodyMultipleChoiceTable = {\n  byId: {\n    [answer_03_body.answerBodyId]: answer_03_body\n  },\n  allIds: [answer_01_body.answerBodyId, answer_02_body.answerBodyId]\n}; // =============== Exam State ====================\n\nexport const initialExamState = {\n  currentExamId: exam_01.examId,\n  currentQuestionIndex: 0,\n  currentQuestionId: question_01.questionId,\n  currentTime: null,\n  timerIsActive: true\n}; // =========================================\n// =========================================\n\n/*\nexport const initialExam: TExamState = {\n  byId: {\n    exam_01: {\n      id: \"exam_01\",\n      name: \"Platform Economy\",\n      questionsById: [\"question_01\", \"question_03\", \"question_02\"],\n    },\n  },\n  allIds: [\"exam_01\"],\n  currentExam: {\n    id: \"exam_01\",\n    currentQuestionIndex: 0,\n  },\n};\n\nexport const initialQuestions: TFreeTextQuestionState = {\n  byId: {\n    question_01: {\n      questionId: \"question_01\",\n      questionTitle: \"General Question\",\n      questionText: \"What does the fox say?\",\n      answerType: \"freeText\",\n      answerText: \"quest01\",\n      timeLimit: 20,\n      timeUsed: null,\n      timeStart: null,\n      timeEnd: null,\n      timeExpired: false,\n    },\n    question_02: {\n      questionId: \"question_02\",\n      questionTitle: \"General Question\",\n      questionText: \"How many roads must a man walk down?\",\n      answerType: \"freeText\",\n      answerText: \"quest02\",\n      timeLimit: 20,\n      timeUsed: null,\n      timeStart: null,\n      timeEnd: null,\n      timeExpired: false,\n    },\n  },\n  allIds: [\"question_01\", \"question_02\"],\n};\n\nexport const initialMultipleChoiceQuestions: TMultipleChoiceQuestionState = {\n  byId: {\n    question_03: {\n      questionId: \"question_03\",\n      questionTitle: \"\",\n      questionText: \"Ja, oder Nein\",\n      answerType: \"multipleChoice\",\n      possibleAnswers: [\"Ja\", \"Nein\"],\n      answerSelection: [],\n      timeLimit: 51,\n      timeUsed: null,\n      timeStart: null,\n      timeEnd: null,\n      timeExpired: false,\n    },\n  },\n  allIds: [\"question_03\"],\n};\n\nexport const initialQuestionTypes: TQuestionTypes = {\n  byId: {\n    question_01: {\n      questionId: \"question_01\",\n      questionType: \"freeTextQuestion\",\n    },\n    question_02: {\n      questionId: \"question_02\",\n      questionType: \"freeTextQuestion\",\n    },\n    question_03: {\n      questionId: \"question_03\",\n      questionType: \"multipleChoiceQuestion\",\n    },\n  },\n  allIds: [\"question_01\", \"question_02\", \"question_03\"],\n};\n\nexport const initialAppState = {\n  currentTime: null,\n  timerIsActive: true,\n};\n*/","map":{"version":3,"sources":["/home/jasper/Documents/Uni/BachelorArbeit/XM/src/redux/initialState.ts"],"names":["v4","question_01","questionId","questionType","timeLimitMs","title","text","answer_01","answerId","timeStart","timeEnd","timeExpired","question_01_body","questionBodyId","answer_01_body","answerBodyId","answerText","question_02","answer_02","question_02_body","answer_02_body","question_03","bodyId","question_03_body","answer_03","answer_03_body","possibleAnswers","selectedAnswers","exam_01","examId","name","questionsById","initialQuestionTable","byId","allIds","initialAnswerTable","initialExamTable","initialQuestionBodyFreeTextTable","initialQuestionBodyMultipleChoiceTable","initialAnswerBodyFreeTextTable","initialAnswerBodyMultipleChoiceTable","initialExamState","currentExamId","currentQuestionIndex","currentQuestionId","currentTime","timerIsActive"],"mappings":"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","sourcesContent":["import { v4 } from \"uuid\";\nimport {\n  TQuestion,\n  TQuestionBodyFreeText,\n  TQuestionBodyMultipleChoice,\n  TAnswerBodyFreeText,\n  TAnswerBodyMultipleChoice,\n  TAnswer,\n  TExam,\n  TQuestionTable,\n  TExamTable,\n  TAnswerTable,\n  TExamState,\n  TQuestionBodyMultipleChoiceTable,\n  TQuestionBodyFreeTextTable,\n  TAnswerBodyFreeTextTable,\n  TAnswerBodyMultipleChoiceTable,\n} from \"../types/exam\";\n\n// ============== Task 01 ===================\nconst question_01: TQuestion = {\n  questionId: v4(),\n  questionType: \"freeText\",\n  timeLimitMs: 5000,\n  title: \"That is the Question\",\n  text: \"What does the Fox say?\",\n};\n\nconst answer_01: TAnswer = {\n  answerId: v4(),\n  questionId: question_01.questionId,\n  timeStart: null,\n  timeEnd: null,\n  timeExpired: false,\n};\n\nconst question_01_body: TQuestionBodyFreeText = {\n  questionBodyId: v4(),\n  questionId: question_01.questionId,\n};\n\nconst answer_01_body: TAnswerBodyFreeText = {\n  answerId: question_01.questionId,\n  questionId: question_01_body.questionBodyId,\n  answerBodyId: v4(),\n  answerText: \"\",\n};\n\n// ============== Task 02 ===================\nconst question_02: TQuestion = {\n  questionId: v4(),\n  questionType: \"freeText\",\n  timeLimitMs: 5000,\n  title: \"Even better Question\",\n  text: \"How many roads must a man walk down?\",\n};\n\nconst answer_02: TAnswer = {\n  answerId: v4(),\n  questionId: question_02.questionId,\n  timeStart: null,\n  timeEnd: null,\n  timeExpired: false,\n};\n\nconst question_02_body: TQuestionBodyFreeText = {\n  questionBodyId: v4(),\n  questionId: question_02.questionId,\n};\n\nconst answer_02_body: TAnswerBodyFreeText = {\n  answerBodyId: v4(),\n  questionId: question_02.questionId,\n  answerId: answer_02.answerId,\n  answerText: \"\",\n};\n\n// ============== Task 03 ===================\n\nconst question_03: TQuestion = {\n  questionId: v4(),\n  questionType: \"multipleChoice\",\n  bodyId: question_03_body.questionBodyId,\n  timeLimitMs: 5000,\n  title: \"Your choice\",\n  text: \"Yes or No?\",\n};\n\nconst answer_03: TAnswer = {\n  answerId: v4(),\n  questionId: question_03.questionId,\n  bodyId: answer_03_body.answerBodyId,\n  timeStart: null,\n  timeEnd: null,\n  timeExpired: false,\n};\n\n\nconst question_03_body: TQuestionBodyMultipleChoice = {\n  questionBodyId: v4(),\n  possibleAnswers: [\"Yes\", \"No\"],\n};\n\nconst answer_03_body: TAnswerBodyMultipleChoice = {\n  answerBodyId: v4(),\n  selectedAnswers: [],\n};\n\n\n// =============== exam_01 ===========\n\nconst exam_01: TExam = {\n  examId: v4(),\n  name: \"Platform Economy\",\n  questionsById: [\n    question_01.questionId,\n    question_02.questionId,\n    question_03.questionId,\n  ],\n};\n\n// =============== tables ================\n\nexport const initialQuestionTable: TQuestionTable = {\n  byId: {\n    [question_01.questionId]: question_01,\n    [question_02.questionId]: question_02,\n    [question_03.questionId]: question_03,\n  },\n  allIds: [\n    question_01.questionId,\n    question_02.questionId,\n    question_03.questionId,\n  ],\n};\n\nexport const initialAnswerTable: TAnswerTable = {\n  byId: {\n    [answer_01.questionId]: answer_01,\n    [answer_02.questionId]: answer_02,\n    [answer_03.questionId]: answer_03,\n  },\n  allIds: [answer_01.answerId, answer_02.answerId, answer_03.answerId],\n};\n\nexport const initialExamTable: TExamTable = {\n  byId: {\n    [exam_01.examId]: exam_01,\n  },\n  allIds: [exam_01.examId],\n};\n\n// ================ Body Table ===================\nexport const initialQuestionBodyFreeTextTable: TQuestionBodyFreeTextTable = {\n  byId: {\n    [question_01_body.questionBodyId]: question_01_body,\n    [question_02_body.questionBodyId]: question_02_body,\n  },\n  allIds: [question_01_body.questionBodyId, question_02_body.questionBodyId],\n};\n\nexport const initialQuestionBodyMultipleChoiceTable: TQuestionBodyMultipleChoiceTable = {\n  byId: {\n    [question_03_body.questionBodyId]: question_03_body,\n  },\n  allIds: [question_03_body.questionBodyId],\n};\n\nexport const initialAnswerBodyFreeTextTable: TAnswerBodyFreeTextTable = {\n  byId: {\n    [answer_01_body.answerBodyId]: answer_01_body,\n    [answer_02_body.answerBodyId]: answer_02_body,\n  },\n  allIds: [answer_03_body.answerBodyId],\n};\n\nexport const initialAnswerBodyMultipleChoiceTable: TAnswerBodyMultipleChoiceTable = {\n  byId: {\n    [answer_03_body.answerBodyId]: answer_03_body,\n  },\n  allIds: [answer_01_body.answerBodyId, answer_02_body.answerBodyId],\n};\n\n// =============== Exam State ====================\n\nexport const initialExamState: TExamState = {\n  currentExamId: exam_01.examId,\n  currentQuestionIndex: 0,\n  currentQuestionId: question_01.questionId,\n  currentTime: null,\n  timerIsActive: true,\n};\n\n// =========================================\n// =========================================\n/*\nexport const initialExam: TExamState = {\n  byId: {\n    exam_01: {\n      id: \"exam_01\",\n      name: \"Platform Economy\",\n      questionsById: [\"question_01\", \"question_03\", \"question_02\"],\n    },\n  },\n  allIds: [\"exam_01\"],\n  currentExam: {\n    id: \"exam_01\",\n    currentQuestionIndex: 0,\n  },\n};\n\nexport const initialQuestions: TFreeTextQuestionState = {\n  byId: {\n    question_01: {\n      questionId: \"question_01\",\n      questionTitle: \"General Question\",\n      questionText: \"What does the fox say?\",\n      answerType: \"freeText\",\n      answerText: \"quest01\",\n      timeLimit: 20,\n      timeUsed: null,\n      timeStart: null,\n      timeEnd: null,\n      timeExpired: false,\n    },\n    question_02: {\n      questionId: \"question_02\",\n      questionTitle: \"General Question\",\n      questionText: \"How many roads must a man walk down?\",\n      answerType: \"freeText\",\n      answerText: \"quest02\",\n      timeLimit: 20,\n      timeUsed: null,\n      timeStart: null,\n      timeEnd: null,\n      timeExpired: false,\n    },\n  },\n  allIds: [\"question_01\", \"question_02\"],\n};\n\nexport const initialMultipleChoiceQuestions: TMultipleChoiceQuestionState = {\n  byId: {\n    question_03: {\n      questionId: \"question_03\",\n      questionTitle: \"\",\n      questionText: \"Ja, oder Nein\",\n      answerType: \"multipleChoice\",\n      possibleAnswers: [\"Ja\", \"Nein\"],\n      answerSelection: [],\n      timeLimit: 51,\n      timeUsed: null,\n      timeStart: null,\n      timeEnd: null,\n      timeExpired: false,\n    },\n  },\n  allIds: [\"question_03\"],\n};\n\nexport const initialQuestionTypes: TQuestionTypes = {\n  byId: {\n    question_01: {\n      questionId: \"question_01\",\n      questionType: \"freeTextQuestion\",\n    },\n    question_02: {\n      questionId: \"question_02\",\n      questionType: \"freeTextQuestion\",\n    },\n    question_03: {\n      questionId: \"question_03\",\n      questionType: \"multipleChoiceQuestion\",\n    },\n  },\n  allIds: [\"question_01\", \"question_02\", \"question_03\"],\n};\n\nexport const initialAppState = {\n  currentTime: null,\n  timerIsActive: true,\n};\n*/\n"]},"metadata":{},"sourceType":"module"}