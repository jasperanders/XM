{"ast":null,"code":"var _jsxFileName = \"/home/jasper/Documents/Uni/BachelorArbeit/XM/frontend/src/components/make/Question/MakeFreeText.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Textarea, Button, Input } from \"theme-ui\";\nexport default function MakeFreeText({\n  register,\n  handleSubmit,\n  getValues,\n  setCurrentAnswerAction,\n  reset,\n  questionId\n}) {\n  /**\n   * React Hooks\n   */\n  const [makeFreeTextState, setMakeFreeTextState] = useState({\n    title: null,\n    questionText: null,\n    masterAnswer: null\n  });\n  /**\n   * Redux Hooks\n   */\n\n  const dispatch = useDispatch();\n  const questionTable = useSelector(state => state.questionTable);\n  const questionBodyFreeTextTable = useSelector(state => state.questionBodyFreeTextTable);\n  let question = undefined;\n  let questionBody = undefined;\n\n  if (questionId) {\n    question = questionTable.byId[questionId];\n    questionBody = questionBodyFreeTextTable.byId[questionId];\n  }\n  /**\n   * Form Hook\n   */\n\n\n  useEffect(() => {\n    setMakeFreeTextState;\n  }, [input]);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    ref: register,\n    name: \"questionTitle\",\n    placeholder: \"Provide a Question Title here\",\n    defaultValue: question ? question.title : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Textarea, {\n    rows: 5,\n    name: \"questionText\",\n    placeholder: \"Provide a question here.\",\n    ref: register,\n    defaultValue: question ? question.text : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Textarea, {\n    rows: 10,\n    name: \"masterAnswer\",\n    placeholder: \"Provide master Answer here\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    sx: {\n      marginRight: \"0.5rem\"\n    },\n    variant: \"warning\",\n    onClick: () => {\n      reset();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"Reset\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"Save\"));\n}","map":{"version":3,"sources":["/home/jasper/Documents/Uni/BachelorArbeit/XM/frontend/src/components/make/Question/MakeFreeText.tsx"],"names":["React","useEffect","useState","useDispatch","useSelector","Textarea","Button","Input","MakeFreeText","register","handleSubmit","getValues","setCurrentAnswerAction","reset","questionId","makeFreeTextState","setMakeFreeTextState","title","questionText","masterAnswer","dispatch","questionTable","state","questionBodyFreeTextTable","question","undefined","questionBody","byId","input","onSubmit","text","marginRight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,KAA3B,QAA8C,UAA9C;AAGA,eAAe,SAASC,YAAT,CAAsB;AACnCC,EAAAA,QADmC;AAEnCC,EAAAA,YAFmC;AAGnCC,EAAAA,SAHmC;AAInCC,EAAAA,sBAJmC;AAKnCC,EAAAA,KALmC;AAMnCC,EAAAA;AANmC,CAAtB,EAOZ;AACD;;;AAGA,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4Cd,QAAQ,CAAC;AACzDe,IAAAA,KAAK,EAAE,IADkD;AAEzDC,IAAAA,YAAY,EAAE,IAF2C;AAGzDC,IAAAA,YAAY,EAAE;AAH2C,GAAD,CAA1D;AAMA;;;;AAIA,QAAMC,QAAQ,GAAGjB,WAAW,EAA5B;AACA,QAAMkB,aAAa,GAAGjB,WAAW,CAAEkB,KAAD,IAAuBA,KAAK,CAACD,aAA9B,CAAjC;AACA,QAAME,yBAAyB,GAAGnB,WAAW,CAC1CkB,KAAD,IAAuBA,KAAK,CAACC,yBADc,CAA7C;AAIA,MAAIC,QAAQ,GAAGC,SAAf;AACA,MAAIC,YAAY,GAAGD,SAAnB;;AAEA,MAAIX,UAAJ,EAAgB;AACdU,IAAAA,QAAQ,GAAGH,aAAa,CAACM,IAAd,CAAmBb,UAAnB,CAAX;AACAY,IAAAA,YAAY,GAAGH,yBAAyB,CAACI,IAA1B,CAA+Bb,UAA/B,CAAf;AACD;AAED;;;;;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,oBAAoB;AACrB,GAFQ,EAEN,CAACY,KAAD,CAFM,CAAT;AAIA,sBACE;AAAM,IAAA,QAAQ,EAAElB,YAAY,CAACmB,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,GAAG,EAAEpB,QADP;AAEE,IAAA,IAAI,EAAE,eAFR;AAGE,IAAA,WAAW,EAAC,+BAHd;AAIE,IAAA,YAAY,EAAEe,QAAQ,GAAGA,QAAQ,CAACP,KAAZ,GAAoB,IAJ5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAE,CADR;AAEE,IAAA,IAAI,EAAE,cAFR;AAGE,IAAA,WAAW,EAAE,0BAHf;AAIE,IAAA,GAAG,EAAER,QAJP;AAKE,IAAA,YAAY,EAAEe,QAAQ,GAAGA,QAAQ,CAACM,IAAZ,GAAmB,IAL3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAcE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAE,EADR;AAEE,IAAA,IAAI,EAAE,cAFR;AAGE,IAAA,WAAW,EAAE,4BAHf;AAIE,IAAA,GAAG,EAAErB,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,eAoBE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAE;AAAEsB,MAAAA,WAAW,EAAE;AAAf,KADN;AAEE,IAAA,OAAO,EAAC,SAFV;AAGE,IAAA,OAAO,EAAE,MAAM;AACblB,MAAAA,KAAK;AACN,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aApBF,eA6BE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA7BF,CADF;AAiCD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { Textarea, Button, Input, Grid } from \"theme-ui\";\nimport { TRootState } from \"../../../types/examTypes\";\n\nexport default function MakeFreeText({\n  register,\n  handleSubmit,\n  getValues,\n  setCurrentAnswerAction,\n  reset,\n  questionId,\n}) {\n  /**\n   * React Hooks\n   */\n  const [makeFreeTextState, setMakeFreeTextState] = useState({\n    title: null,\n    questionText: null,\n    masterAnswer: null,\n  });\n\n  /**\n   * Redux Hooks\n   */\n\n  const dispatch = useDispatch();\n  const questionTable = useSelector((state: TRootState) => state.questionTable);\n  const questionBodyFreeTextTable = useSelector(\n    (state: TRootState) => state.questionBodyFreeTextTable\n  );\n\n  let question = undefined;\n  let questionBody = undefined;\n\n  if (questionId) {\n    question = questionTable.byId[questionId];\n    questionBody = questionBodyFreeTextTable.byId[questionId];\n  }\n\n  /**\n   * Form Hook\n   */\n\n  useEffect(() => {\n    setMakeFreeTextState\n  }, [input])\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Input\n        ref={register}\n        name={\"questionTitle\"}\n        placeholder=\"Provide a Question Title here\"\n        defaultValue={question ? question.title : null}\n      />\n      <Textarea\n        rows={5}\n        name={\"questionText\"}\n        placeholder={\"Provide a question here.\"}\n        ref={register}\n        defaultValue={question ? question.text : null}\n      />\n      <Textarea\n        rows={10}\n        name={\"masterAnswer\"}\n        placeholder={\"Provide master Answer here\"}\n        ref={register}\n      />\n      <Button\n        sx={{ marginRight: \"0.5rem\" }}\n        variant=\"warning\"\n        onClick={() => {\n          reset();\n        }}\n      >\n        Reset\n      </Button>\n      <Button type=\"submit\">Save</Button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}