{"ast":null,"code":"var _jsxFileName = \"/home/jasper/Documents/Uni/BachelorArbeit/XM/frontend/src/components/make/Question/index.tsx\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport MakeFreeText from \"./MakeFreeText\";\nimport MakeMultipleChoice from \"./MakeMultipleChoice\";\nexport default function Question({\n  currentQuestion\n}) {\n  /**\n   * React Hooks\n   */\n  const [currentAnswerAction, setCurrentAnswerAction] = useState(() => {});\n  const [currentQuestionType, setCurrentQuestionType] = useState(currentQuestion.questionType);\n  /**\n   * Redux\n   */\n\n  const dispatch = useDispatch();\n  /**\n   * Hook Form\n   */\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors,\n    reset,\n    getValues\n  } = useForm();\n  /**\n   * Effects\n   */\n\n  const questionBody = () => {\n    console.log();\n\n    switch (currentQuestionType) {\n      case \"freeText\":\n        return /*#__PURE__*/React.createElement(MakeFreeText, {\n          register: register,\n          handleSubmit: handleSubmit,\n          getValues: getValues,\n          setCurrentAnswerAction: setCurrentAnswerAction,\n          reset: reset,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }\n        });\n\n      case \"multipleChoice\":\n        return /*#__PURE__*/React.createElement(MakeMultipleChoice, {\n          register: register,\n          handleSubmit: handleSubmit,\n          getValues: getValues,\n          setCurrentAnswerAction: setCurrentAnswerAction,\n          reset: reset,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }\n        });\n\n      default:\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 16\n          }\n        }, \"Something went wrong\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 10\n    }\n  }, questionBody());\n}","map":{"version":3,"sources":["/home/jasper/Documents/Uni/BachelorArbeit/XM/frontend/src/components/make/Question/index.tsx"],"names":["React","useState","useDispatch","useForm","MakeFreeText","MakeMultipleChoice","Question","currentQuestion","currentAnswerAction","setCurrentAnswerAction","currentQuestionType","setCurrentQuestionType","questionType","dispatch","register","handleSubmit","watch","errors","reset","getValues","questionBody","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AAGA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAuC;AACpD;;;AAGA,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDR,QAAQ,CAAC,MAAM,CAAE,CAAT,CAA9D;AACA,QAAM,CAACS,mBAAD,EAAsBC,sBAAtB,IAAgDV,QAAQ,CAC5DM,eAAe,CAACK,YAD4C,CAA9D;AAGA;;;;AAGA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AAEA;;;;AAIA,QAAM;AAAEY,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA,MAAjC;AAAyCC,IAAAA,KAAzC;AAAgDC,IAAAA;AAAhD,MAA8DhB,OAAO,EAA3E;AAEA;;;;AAIA,QAAMiB,YAAY,GAAG,MAAM;AACzBC,IAAAA,OAAO,CAACC,GAAR;;AACA,YAAQZ,mBAAR;AACE,WAAK,UAAL;AACE,4BACE,oBAAC,YAAD;AACE,UAAA,QAAQ,EAAEI,QADZ;AAEE,UAAA,YAAY,EAAEC,YAFhB;AAGE,UAAA,SAAS,EAAEI,SAHb;AAIE,UAAA,sBAAsB,EAAEV,sBAJ1B;AAKE,UAAA,KAAK,EAAES,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AASF,WAAK,gBAAL;AACE,4BACE,oBAAC,kBAAD;AACE,UAAA,QAAQ,EAAEJ,QADZ;AAEE,UAAA,YAAY,EAAEC,YAFhB;AAGE,UAAA,SAAS,EAAEI,SAHb;AAIE,UAAA,sBAAsB,EAAEV,sBAJ1B;AAKE,UAAA,KAAK,EAAES,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AASF;AACE,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAP;AAtBJ;AAwBD,GA1BD;;AA2BA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAME,YAAY,EAAlB,CAAP;AACD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport MakeFreeText from \"./MakeFreeText\";\nimport MakeMultipleChoice from \"./MakeMultipleChoice\";\nimport { TRootState } from \"../../../types/examTypes\";\n\nexport default function Question({ currentQuestion }) {\n  /**\n   * React Hooks\n   */\n  const [currentAnswerAction, setCurrentAnswerAction] = useState(() => {});\n  const [currentQuestionType, setCurrentQuestionType] = useState(\n    currentQuestion.questionType\n  );\n  /**\n   * Redux\n   */\n  const dispatch = useDispatch();\n\n  /**\n   * Hook Form\n   */\n\n  const { register, handleSubmit, watch, errors, reset, getValues } = useForm();\n\n  /**\n   * Effects\n   */\n\n  const questionBody = () => {\n    console.log()\n    switch (currentQuestionType) {\n      case \"freeText\":\n        return (\n          <MakeFreeText\n            register={register}\n            handleSubmit={handleSubmit}\n            getValues={getValues}\n            setCurrentAnswerAction={setCurrentAnswerAction}\n            reset={reset}\n          />\n        );\n      case \"multipleChoice\":\n        return (\n          <MakeMultipleChoice\n            register={register}\n            handleSubmit={handleSubmit}\n            getValues={getValues}\n            setCurrentAnswerAction={setCurrentAnswerAction}\n            reset={reset}\n          />\n        );\n      default:\n        return <div>Something went wrong</div>;\n    }\n  };\n  return <div>{questionBody()}</div>;\n}\n"]},"metadata":{},"sourceType":"module"}