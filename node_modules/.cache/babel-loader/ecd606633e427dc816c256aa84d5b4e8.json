{"ast":null,"code":"import _slicedToArray from\"/home/jasper/Documents/Uni/BachelorArbeit/XM/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{useSelector,useDispatch}from\"react-redux\";import{useHistory}from\"react-router-dom\";import{store}from\"../../index\";import{Heading}from\"theme-ui\";export default function Timer(_ref){var questionId=_ref.questionId,currentExam=_ref.currentExam,answerQuestionAction=_ref.answerQuestionAction;var history=useHistory();var useTimer=true;var dispatch=useDispatch();var answer=useSelector(function(state){return state.answerTable.byId[questionId];});var question=useSelector(function(state){return state.questionTable.byId[questionId];});var timeStart=answer.timeStart;var timeLimitMs=question.timeLimitMs;var _useState=useState((timeStart?Math.round(timeLimitMs-(Date.now()-timeStart)):timeLimitMs)/1000),_useState2=_slicedToArray(_useState,2),timeLeft=_useState2[0],setTimeLeft=_useState2[1];useEffect(function(){if(useTimer){setTimeLeft(timeLimitMs/1000);var interval=setInterval(function(){var now=Date.now();var timeStart=store.getState().answerTable.byId[questionId].timeStart;var newTimeLeft=Math.round((timeLimitMs-(now-timeStart))/1000);if(newTimeLeft>-1){setTimeLeft(newTimeLeft);}else{console.log(questionId);dispatch(answerQuestionAction());// dispatch(nextQuestion({ currentExam }));\nclearInterval(interval);}},1000);return function(){clearInterval(interval);};}},[question.questionId,currentExam,dispatch,timeLimitMs,questionId,answerQuestionAction]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Heading,{as:\"h3\"},timeLeft));}","map":{"version":3,"sources":["/home/jasper/Documents/Uni/BachelorArbeit/XM/frontend/src/components/timer/Timer.tsx"],"names":["React","useEffect","useState","useSelector","useDispatch","useHistory","store","Heading","Timer","questionId","currentExam","answerQuestionAction","history","useTimer","dispatch","answer","state","answerTable","byId","question","questionTable","timeStart","timeLimitMs","Math","round","Date","now","timeLeft","setTimeLeft","interval","setInterval","getState","newTimeLeft","console","log","clearInterval"],"mappings":"wIAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,KAAT,KAAsB,aAAtB,CACA,OAASC,OAAT,KAAwB,UAAxB,CAIA,cAAe,SAASC,CAAAA,KAAT,MAIZ,IAHDC,CAAAA,UAGC,MAHDA,UAGC,CAFDC,WAEC,MAFDA,WAEC,CADDC,oBACC,MADDA,oBACC,CACD,GAAMC,CAAAA,OAAO,CAAGP,UAAU,EAA1B,CACA,GAAMQ,CAAAA,QAAQ,CAAG,IAAjB,CACA,GAAMC,CAAAA,QAAQ,CAAGV,WAAW,EAA5B,CACA,GAAMW,CAAAA,MAAM,CAAGZ,WAAW,CACxB,SAACa,KAAD,QAAuBA,CAAAA,KAAK,CAACC,WAAN,CAAkBC,IAAlB,CAAuBT,UAAvB,CAAvB,EADwB,CAA1B,CAGA,GAAMU,CAAAA,QAAQ,CAAGhB,WAAW,CAC1B,SAACa,KAAD,QAAuBA,CAAAA,KAAK,CAACI,aAAN,CAAoBF,IAApB,CAAyBT,UAAzB,CAAvB,EAD0B,CAA5B,CAPC,GAWOY,CAAAA,SAXP,CAWqBN,MAXrB,CAWOM,SAXP,IAYOC,CAAAA,WAZP,CAYuBH,QAZvB,CAYOG,WAZP,eAc+BpB,QAAQ,CACtC,CAACmB,SAAS,CACNE,IAAI,CAACC,KAAL,CAAWF,WAAW,EAAIG,IAAI,CAACC,GAAL,GAAaL,SAAjB,CAAtB,CADM,CAENC,WAFJ,EAEmB,IAHmB,CAdvC,wCAcMK,QAdN,eAcgBC,WAdhB,eAoBD3B,SAAS,CAAC,UAAM,CACd,GAAIY,QAAJ,CAAc,CACZe,WAAW,CAACN,WAAW,CAAG,IAAf,CAAX,CACA,GAAMO,CAAAA,QAAQ,CAAGC,WAAW,CAAC,UAAM,CACjC,GAAMJ,CAAAA,GAAG,CAAGD,IAAI,CAACC,GAAL,EAAZ,CACA,GAAML,CAAAA,SAAS,CAAGf,KAAK,CAACyB,QAAN,GAAiBd,WAAjB,CAA6BC,IAA7B,CAAkCT,UAAlC,EACfY,SADH,CAEA,GAAMW,CAAAA,WAAW,CAAGT,IAAI,CAACC,KAAL,CAClB,CAACF,WAAW,EAAII,GAAG,CAAGL,SAAV,CAAZ,EAAoC,IADlB,CAApB,CAGA,GAAIW,WAAW,CAAG,CAAC,CAAnB,CAAsB,CACpBJ,WAAW,CAACI,WAAD,CAAX,CACD,CAFD,IAEO,CACLC,OAAO,CAACC,GAAR,CAAYzB,UAAZ,EACAK,QAAQ,CAACH,oBAAoB,EAArB,CAAR,CACA;AACAwB,aAAa,CAACN,QAAD,CAAb,CACD,CACF,CAf2B,CAezB,IAfyB,CAA5B,CAiBA,MAAO,WAAM,CACXM,aAAa,CAACN,QAAD,CAAb,CACD,CAFD,CAGD,CACF,CAxBQ,CAwBN,CACDV,QAAQ,CAACV,UADR,CAEDC,WAFC,CAGDI,QAHC,CAIDQ,WAJC,CAKDb,UALC,CAMDE,oBANC,CAxBM,CAAT,CAiCA,mBACE,qDACE,oBAAC,OAAD,EAAS,EAAE,CAAE,IAAb,EAAoBgB,QAApB,CADF,CADF,CAKD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { store } from \"../../index\";\nimport { Heading } from \"theme-ui\";\nimport { TRootState } from \"../../types/examTypes\";\nimport { nextQuestion } from \"../../redux/actions\";\n\nexport default function Timer({\n  questionId,\n  currentExam,\n  answerQuestionAction,\n}) {\n  const history = useHistory();\n  const useTimer = true;\n  const dispatch = useDispatch();\n  const answer = useSelector(\n    (state: TRootState) => state.answerTable.byId[questionId]\n  );\n  const question = useSelector(\n    (state: TRootState) => state.questionTable.byId[questionId]\n  );\n\n  const { timeStart } = answer;\n  const { timeLimitMs } = question;\n\n  const [timeLeft, setTimeLeft] = useState(\n    (timeStart\n      ? Math.round(timeLimitMs - (Date.now() - timeStart))\n      : timeLimitMs) / 1000\n  );\n\n  useEffect(() => {\n    if (useTimer) {\n      setTimeLeft(timeLimitMs / 1000);\n      const interval = setInterval(() => {\n        const now = Date.now();\n        const timeStart = store.getState().answerTable.byId[questionId]\n          .timeStart;\n        const newTimeLeft = Math.round(\n          (timeLimitMs - (now - timeStart)) / 1000\n        );\n        if (newTimeLeft > -1) {\n          setTimeLeft(newTimeLeft);\n        } else {\n          console.log(questionId);\n          dispatch(answerQuestionAction());\n          // dispatch(nextQuestion({ currentExam }));\n          clearInterval(interval);\n        }\n      }, 1000);\n\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, [\n    question.questionId,\n    currentExam,\n    dispatch,\n    timeLimitMs,\n    questionId,\n    answerQuestionAction,\n  ]);\n\n  return (\n    <>\n      <Heading as={\"h3\"}>{timeLeft}</Heading>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}