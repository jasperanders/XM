{"ast":null,"code":"import _slicedToArray from\"/home/jasper/Documents/Uni/BachelorArbeit/XM/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useContext}from\"react\";import{v4}from\"uuid\";import HttpService from\"./http\";import apiRoutes from\"./apiRoutes\";import{useDispatch}from\"react-redux\";import{setExamTable,setQuestionTable,setAnswerBodyFreeTextTable,setQuestionBodyFreeTextTable,setQuestionBodyMultipleChoiceTable,setExamState,setAnswerTable,setAnswerBodyMultipleChoiceTable}from\"../redux/actions\";import{UserContext}from\"./userContext\";// Initializes the Context. This constant must be imported, wherever\n// you need to access the user context\nexport var ExamContext=React.createContext({loading:true,loadAllUsers:function loadAllUsers(){},allUsers:{rows:[]},allQuestions:{rows:[]}});export default function UserContextProvider(_ref){var children=_ref.children;var _useContext=useContext(UserContext),user=_useContext.user;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState({rows:[]}),_useState4=_slicedToArray(_useState3,2),allUsers=_useState4[0],setAllUsers=_useState4[1];var _useState5=useState({rows:[]}),_useState6=_slicedToArray(_useState5,2),allQuestions=_useState6[0],setAllQuestions=_useState6[1];var _useState7=useState({rows:[]}),_useState8=_slicedToArray(_useState7,2),allExams=_useState8[0],setAllExams=_useState8[1];var _useState9=useState({rows:[]}),_useState10=_slicedToArray(_useState9,2),allFreeTextQuestion=_useState10[0],setAllFreeTextQuestion=_useState10[1];var _useState11=useState({rows:[]}),_useState12=_slicedToArray(_useState11,2),allMultipleChoice=_useState12[0],setAllMultipleChoice=_useState12[1];var dispatch=useDispatch();useEffect(function(){setLoading(true);loadAllUsers();loadAllQuestions();loadAllExams();loadAllFreeText();loadAllMultipleChoice();setLoading(false);},[user]);/**\n   * Exam Table\n   */useEffect(function(){var _allExams$rows$,_allExams$rows$$conte,_allExams$rows$2;var newTable={byId:{},allIds:[]};console.log(allExams);var firstQuestionId=allExams===null||allExams===void 0?void 0:(_allExams$rows$=allExams.rows[0])===null||_allExams$rows$===void 0?void 0:(_allExams$rows$$conte=_allExams$rows$.content)===null||_allExams$rows$$conte===void 0?void 0:_allExams$rows$$conte.questionsById[0];var firstExam=allExams===null||allExams===void 0?void 0:(_allExams$rows$2=allExams.rows[0])===null||_allExams$rows$2===void 0?void 0:_allExams$rows$2._id;allExams.rows.map(function(_ref2){var _id=_ref2._id,content=_ref2.content;newTable.byId[_id]={examId:_id,name:content.name,questionsById:content.questionsById};newTable.allIds.push(_id);});dispatch(setExamTable({newTable:newTable}));dispatch(setExamState({newTable:{currentExamId:firstExam,currentQuestionIndex:0,currentQuestionId:firstQuestionId,currentTime:null,timerIsActive:true,examFinished:false}}));},[allExams]);/**\n   * Question Table\n   */useEffect(function(){var newTable={byId:{},allIds:[]};var newAnswerTable={byId:{},allIds:[]};var newFreeTextAnswerTable={byId:{},allIds:[]};var newMultipleChoiceAnswerTable={byId:{},allIds:[]};allQuestions.rows.map(function(_ref3){var _id=_ref3._id,content=_ref3.content;newTable.byId[_id]={questionId:_id,questionType:content.questionType,text:content.text,timeLimitMs:content.timeLimitMs,title:content.title};newTable.allIds.push(_id);var newAnswerId=v4();newAnswerTable.byId[_id]={questionId:_id,answerId:newAnswerId,timeStart:null,timeEnd:null,timeExpired:false};newAnswerTable.allIds.push(_id);if(content.questionType===\"freeText\"){newFreeTextAnswerTable.byId[_id]={questionId:_id,answerId:newAnswerId,answerText:\"\"};newFreeTextAnswerTable.allIds.push(newAnswerId);}else if(content.questionType===\"multipleChoice\"){newMultipleChoiceAnswerTable.byId[_id]={questionId:_id,answerId:newAnswerId,selectedAnswers:\"\"};newMultipleChoiceAnswerTable.allIds.push(newAnswerId);}});dispatch(setQuestionTable({newTable:newTable}));dispatch(setAnswerTable({newTable:newAnswerTable}));dispatch(setAnswerBodyFreeTextTable({newTable:newFreeTextAnswerTable}));dispatch(setAnswerBodyMultipleChoiceTable({newTable:newMultipleChoiceAnswerTable}));},[allQuestions]);/**\n   * FreeTextQuestions\n   */useEffect(function(){var newTable={byId:{},allIds:[]};allFreeTextQuestion.rows.map(function(_ref4){var _id=_ref4._id,content=_ref4.content;newTable.byId[content.questionId]={questionId:content.questionId};newTable.allIds.push(content.questionId);});dispatch(setQuestionBodyFreeTextTable({newTable:newTable}));},[allFreeTextQuestion]);/**\n   * MultipleChoiceQuestions\n   */useEffect(function(){var newTable={byId:{},allIds:[]};allMultipleChoice.rows.map(function(_ref5){var _id=_ref5._id,content=_ref5.content;console.log(content);newTable.byId[content.questionId]={questionId:content.questionIds,possibleAnswers:content.possibleAnswers};newTable.allIds.push(content.questionId);});console.log(\"newTable\",newTable);dispatch(setQuestionBodyMultipleChoiceTable({newTable:newTable}));},[allMultipleChoice]);/**\n   * Load Tables\n   *\n   */var loadAllUsers=function loadAllUsers(){return HttpService.get(apiRoutes.USER).then(function(_ref6){var data=_ref6.data;setAllUsers(data);});};var loadAllQuestions=function loadAllQuestions(){return HttpService.get(apiRoutes.QUESTION).then(function(_ref7){var data=_ref7.data;setAllQuestions(data);});};var loadAllExams=function loadAllExams(){return HttpService.get(apiRoutes.EXAM).then(function(_ref8){var data=_ref8.data;setAllExams(data);}).catch(\"fetch Exams failed\");};var loadAllFreeText=function loadAllFreeText(){return HttpService.get(apiRoutes.FREE_TEXT_QUESTION).then(function(_ref9){var data=_ref9.data;setAllFreeTextQuestion(data);});};var loadAllMultipleChoice=function loadAllMultipleChoice(){return HttpService.get(apiRoutes.MULTIPLE_CHOICE_QUESTION).then(function(_ref10){var data=_ref10.data;setAllMultipleChoice(data);});};return/*#__PURE__*/ // For more details on how the React Context API works, take a look at https://reactjs.org/docs/context.html\n// In this case we provide an user object and both the load- and wipe-user function to the react context.\n// In order to access the right component scope we also need to bind the this-context. In a case, where we don't\n// do that the function cannot access the component state and thus cannot change the user-context.\nReact.createElement(ExamContext.Provider,{value:{loading:loading,allQuestions:allQuestions,loadAllUsers:loadAllUsers,allUsers:allUsers}},children);}","map":{"version":3,"sources":["/home/jasper/Documents/Uni/BachelorArbeit/XM/frontend/src/services/examContext.tsx"],"names":["React","useState","useEffect","useContext","v4","HttpService","apiRoutes","useDispatch","setExamTable","setQuestionTable","setAnswerBodyFreeTextTable","setQuestionBodyFreeTextTable","setQuestionBodyMultipleChoiceTable","setExamState","setAnswerTable","setAnswerBodyMultipleChoiceTable","UserContext","ExamContext","createContext","loading","loadAllUsers","allUsers","rows","allQuestions","UserContextProvider","children","user","setLoading","setAllUsers","setAllQuestions","allExams","setAllExams","allFreeTextQuestion","setAllFreeTextQuestion","allMultipleChoice","setAllMultipleChoice","dispatch","loadAllQuestions","loadAllExams","loadAllFreeText","loadAllMultipleChoice","newTable","byId","allIds","console","log","firstQuestionId","content","questionsById","firstExam","_id","map","examId","name","push","currentExamId","currentQuestionIndex","currentQuestionId","currentTime","timerIsActive","examFinished","newAnswerTable","newFreeTextAnswerTable","newMultipleChoiceAnswerTable","questionId","questionType","text","timeLimitMs","title","newAnswerId","answerId","timeStart","timeEnd","timeExpired","answerText","selectedAnswers","questionIds","possibleAnswers","get","USER","then","data","QUESTION","EXAM","catch","FREE_TEXT_QUESTION","MULTIPLE_CHOICE_QUESTION"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { v4 } from \"uuid\";\nimport HttpService, { storedAuthToken } from \"./http\";\nimport apiRoutes from \"./apiRoutes\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  setExamTable,\n  setQuestionTable,\n  setAnswerBodyFreeTextTable,\n  setQuestionBodyFreeTextTable,\n  setQuestionBodyMultipleChoiceTable,\n  setCurrentQuestionId,\n  setExamState,\n  setAnswerTable,\n  setAnswerBodyMultipleChoiceTable,\n} from \"../redux/actions\";\nimport { UserContext } from \"./userContext\";\n\n// Initializes the Context. This constant must be imported, wherever\n// you need to access the user context\nexport const ExamContext = React.createContext({\n  loading: true,\n  loadAllUsers: () => {},\n  allUsers: { rows: [] },\n  allQuestions: { rows: [] },\n});\n\nexport default function UserContextProvider({ children }) {\n  const { user } = useContext(UserContext);\n\n  const [loading, setLoading] = useState(true);\n  const [allUsers, setAllUsers] = useState({ rows: [] });\n  const [allQuestions, setAllQuestions] = useState({ rows: [] });\n  const [allExams, setAllExams] = useState({ rows: [] });\n  const [allFreeTextQuestion, setAllFreeTextQuestion] = useState({ rows: [] });\n  const [allMultipleChoice, setAllMultipleChoice] = useState({ rows: [] });\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setLoading(true);\n    loadAllUsers();\n    loadAllQuestions();\n    loadAllExams();\n    loadAllFreeText();\n    loadAllMultipleChoice();\n    setLoading(false);\n  }, [user]);\n\n  /**\n   * Exam Table\n   */\n  useEffect(() => {\n    const newTable = { byId: {}, allIds: [] };\n    console.log(allExams);\n    const firstQuestionId = allExams?.rows[0]?.content?.questionsById[0];\n    const firstExam = allExams?.rows[0]?._id;\n\n    allExams.rows.map(({ _id, content }) => {\n      newTable.byId[_id] = {\n        examId: _id,\n        name: content.name,\n        questionsById: content.questionsById,\n      };\n      newTable.allIds.push(_id);\n    });\n    dispatch(setExamTable({ newTable }));\n    dispatch(\n      setExamState({\n        newTable: {\n          currentExamId: firstExam,\n          currentQuestionIndex: 0,\n          currentQuestionId: firstQuestionId,\n          currentTime: null,\n          timerIsActive: true,\n          examFinished: false,\n        },\n      })\n    );\n  }, [allExams]);\n\n  /**\n   * Question Table\n   */\n  useEffect(() => {\n    const newTable = { byId: {}, allIds: [] };\n    const newAnswerTable = { byId: {}, allIds: [] };\n    const newFreeTextAnswerTable = { byId: {}, allIds: [] };\n    const newMultipleChoiceAnswerTable = { byId: {}, allIds: [] };\n    allQuestions.rows.map(({ _id, content }) => {\n      newTable.byId[_id] = {\n        questionId: _id,\n        questionType: content.questionType,\n        text: content.text,\n        timeLimitMs: content.timeLimitMs,\n        title: content.title,\n      };\n      newTable.allIds.push(_id);\n      const newAnswerId = v4();\n      newAnswerTable.byId[_id] = {\n        questionId: _id,\n        answerId: newAnswerId,\n        timeStart: null,\n        timeEnd: null,\n        timeExpired: false,\n      };\n      newAnswerTable.allIds.push(_id);\n      if (content.questionType === \"freeText\") {\n        newFreeTextAnswerTable.byId[_id] = {\n          questionId: _id,\n          answerId: newAnswerId,\n          answerText: \"\",\n        };\n        newFreeTextAnswerTable.allIds.push(newAnswerId);\n      } else if (content.questionType === \"multipleChoice\") {\n        newMultipleChoiceAnswerTable.byId[_id] = {\n          questionId: _id,\n          answerId: newAnswerId,\n          selectedAnswers: \"\",\n        };\n        newMultipleChoiceAnswerTable.allIds.push(newAnswerId);\n      }\n    });\n    dispatch(setQuestionTable({ newTable }));\n    dispatch(setAnswerTable({ newTable: newAnswerTable }));\n    dispatch(setAnswerBodyFreeTextTable({ newTable: newFreeTextAnswerTable }));\n    dispatch(\n      setAnswerBodyMultipleChoiceTable({\n        newTable: newMultipleChoiceAnswerTable,\n      })\n    );\n  }, [allQuestions]);\n\n  /**\n   * FreeTextQuestions\n   */\n  useEffect(() => {\n    const newTable = { byId: {}, allIds: [] };\n    allFreeTextQuestion.rows.map(({ _id, content }) => {\n      newTable.byId[content.questionId] = {\n        questionId: content.questionId,\n      };\n      newTable.allIds.push(content.questionId);\n    });\n    dispatch(setQuestionBodyFreeTextTable({ newTable }));\n  }, [allFreeTextQuestion]);\n\n  /**\n   * MultipleChoiceQuestions\n   */\n  useEffect(() => {\n    const newTable = { byId: {}, allIds: [] };\n    allMultipleChoice.rows.map(({ _id, content }) => {\n      console.log(content);\n      newTable.byId[content.questionId] = {\n        questionId: content.questionIds,\n        possibleAnswers: content.possibleAnswers,\n      };\n      newTable.allIds.push(content.questionId);\n    });\n    console.log(\"newTable\", newTable);\n    dispatch(setQuestionBodyMultipleChoiceTable({ newTable }));\n  }, [allMultipleChoice]);\n\n  /**\n   * Load Tables\n   *\n   */\n  const loadAllUsers = () => {\n    return HttpService.get(apiRoutes.USER).then(({ data }) => {\n      setAllUsers(data);\n    });\n  };\n\n  const loadAllQuestions = () => {\n    return HttpService.get(apiRoutes.QUESTION).then(({ data }) => {\n      setAllQuestions(data);\n    });\n  };\n\n  const loadAllExams = () => {\n    return HttpService.get(apiRoutes.EXAM)\n      .then(({ data }) => {\n        setAllExams(data);\n      })\n      .catch(\"fetch Exams failed\");\n  };\n\n  const loadAllFreeText = () => {\n    return HttpService.get(apiRoutes.FREE_TEXT_QUESTION).then(({ data }) => {\n      setAllFreeTextQuestion(data);\n    });\n  };\n\n  const loadAllMultipleChoice = () => {\n    return HttpService.get(apiRoutes.MULTIPLE_CHOICE_QUESTION).then(\n      ({ data }) => {\n        setAllMultipleChoice(data);\n      }\n    );\n  };\n\n  return (\n    // For more details on how the React Context API works, take a look at https://reactjs.org/docs/context.html\n    // In this case we provide an user object and both the load- and wipe-user function to the react context.\n    // In order to access the right component scope we also need to bind the this-context. In a case, where we don't\n    // do that the function cannot access the component state and thus cannot change the user-context.\n    <ExamContext.Provider\n      value={{\n        loading,\n        allQuestions,\n        loadAllUsers,\n        allUsers,\n      }}\n    >\n      {children}\n    </ExamContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}