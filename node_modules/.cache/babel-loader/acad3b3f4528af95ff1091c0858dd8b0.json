{"ast":null,"code":"import React,{lazy,useContext}from\"react\";import{Switch,Route,Redirect}from\"react-router-dom\";import TakeExam from\"./takeExam\";import MakeExam from\"./makeExam\";import Layout from\"../components/layout/Layout\";import ExamProgress from\"../components/head/ExamProgress\";import{useSelector}from\"react-redux\";import Login from\"./login\";import{UserContext}from\"../services/userContext\";var ExamEnd=lazy(function(){return import(\".cache/mdx.macro/examEnd.640743e19a.mdx.js\");});export default function Routes(){var _useContext=useContext(UserContext),user=_useContext.user;var examFinished=useSelector(function(state){return state.examState.examFinished;});var makeRoutes=function makeRoutes(){if(user.role===\"user\"){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/\"},examFinished?/*#__PURE__*/React.createElement(Redirect,{to:\"/exam/done/\"}):/*#__PURE__*/React.createElement(Redirect,{to:\"/exam/\"})),/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/exam/\"},examFinished?/*#__PURE__*/React.createElement(Redirect,{to:\"/exam/done/\"}):/*#__PURE__*/React.createElement(TakeExam,null)),/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/exam/done/\"},examFinished?/*#__PURE__*/React.createElement(Layout,{header:/*#__PURE__*/React.createElement(ExamProgress,null),mainContent:/*#__PURE__*/React.createElement(ExamEnd,null)}):/*#__PURE__*/React.createElement(Redirect,{to:\"/exam/\"})),/*#__PURE__*/React.createElement(Route,{path:\"/\"},/*#__PURE__*/React.createElement(Redirect,{to:\"/exam/\"})));}else if(user.role===\"admin\"){return/*#__PURE__*/React.createElement(Route,{path:\"/\"},/*#__PURE__*/React.createElement(MakeExam,null));}else{return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Route,{path:\"/login/\"},/*#__PURE__*/React.createElement(Login,null)),/*#__PURE__*/React.createElement(Route,{path:\"/\"},/*#__PURE__*/React.createElement(Redirect,{to:\"/login/\"})));}};return/*#__PURE__*/React.createElement(Switch,null,makeRoutes());}","map":{"version":3,"sources":["/home/jasper/Documents/Uni/BachelorArbeit/XM/frontend/src/routes/index.tsx"],"names":["React","lazy","useContext","Switch","Route","Redirect","TakeExam","MakeExam","Layout","ExamProgress","useSelector","Login","UserContext","ExamEnd","Routes","user","examFinished","state","examState","makeRoutes","role"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,IAAhB,CAAgCC,UAAhC,KAAkD,OAAlD,CACA,OAASC,MAAT,CAAiBC,KAAjB,CAAwBC,QAAxB,KAAwC,kBAAxC,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,6BAAnB,CAEA,MAAOC,CAAAA,YAAP,KAAyB,iCAAzB,CACA,OAASC,WAAT,KAA4B,aAA5B,CAEA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,WAAT,KAA4B,yBAA5B,CACA,GAAMC,CAAAA,OAAO,CAAGZ,IAAI,CAAC,wEAAD,CAApB,CAEA,cAAe,SAASa,CAAAA,MAAT,EAAkB,iBACdZ,UAAU,CAACU,WAAD,CADI,CACvBG,IADuB,aACvBA,IADuB,CAE/B,GAAMC,CAAAA,YAAY,CAAGN,WAAW,CAC9B,SAACO,KAAD,QAAuBA,CAAAA,KAAK,CAACC,SAAN,CAAgBF,YAAvC,EAD8B,CAAhC,CAIA,GAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,GAAIJ,IAAI,CAACK,IAAL,GAAc,MAAlB,CAA0B,CACxB,mBACE,qDACE,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,GAAlB,EACGJ,YAAY,cACX,oBAAC,QAAD,EAAU,EAAE,CAAC,aAAb,EADW,cAGX,oBAAC,QAAD,EAAU,EAAE,CAAC,QAAb,EAJJ,CADF,cAQE,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,QAAlB,EACGA,YAAY,cAAG,oBAAC,QAAD,EAAU,EAAE,CAAC,aAAb,EAAH,cAAmC,oBAAC,QAAD,MADlD,CARF,cAWE,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,aAAlB,EACGA,YAAY,cACX,oBAAC,MAAD,EAAQ,MAAM,cAAE,oBAAC,YAAD,MAAhB,CAAkC,WAAW,cAAE,oBAAC,OAAD,MAA/C,EADW,cAGX,oBAAC,QAAD,EAAU,EAAE,CAAC,QAAb,EAJJ,CAXF,cAkBE,oBAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,eACE,oBAAC,QAAD,EAAU,EAAE,CAAC,QAAb,EADF,CAlBF,CADF,CAwBD,CAzBD,IAyBO,IAAID,IAAI,CAACK,IAAL,GAAc,OAAlB,CAA2B,CAChC,mBACE,oBAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,eACE,oBAAC,QAAD,MADF,CADF,CAKD,CANM,IAMA,CACL,mBACE,qDACE,oBAAC,KAAD,EAAO,IAAI,CAAC,SAAZ,eACE,oBAAC,KAAD,MADF,CADF,cAIE,oBAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,eACE,oBAAC,QAAD,EAAU,EAAE,CAAC,SAAb,EADF,CAJF,CADF,CAUD,CACF,CA5CD,CA8CA,mBAAO,oBAAC,MAAD,MAASD,UAAU,EAAnB,CAAP,CACD","sourcesContent":["import React, { lazy, useState, useContext } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport TakeExam from \"./takeExam\";\nimport MakeExam from \"./makeExam\";\nimport Layout from \"../components/layout/Layout\";\nimport { importMDX } from \"mdx.macro\";\nimport ExamProgress from \"../components/head/ExamProgress\";\nimport { useSelector } from \"react-redux\";\nimport { TRootState } from \"../types/examTypes\";\nimport Login from \"./login\";\nimport { UserContext } from \"../services/userContext\";\nconst ExamEnd = lazy(() => importMDX(\"../mdx/examEnd.mdx\"));\n\nexport default function Routes() {\n  const { user } = useContext(UserContext);\n  const examFinished = useSelector(\n    (state: TRootState) => state.examState.examFinished\n  );\n\n  const makeRoutes = () => {\n    if (user.role === \"user\") {\n      return (\n        <>\n          <Route exact path=\"/\">\n            {examFinished ? (\n              <Redirect to=\"/exam/done/\" />\n            ) : (\n              <Redirect to=\"/exam/\" />\n            )}\n          </Route>\n          <Route exact path=\"/exam/\">\n            {examFinished ? <Redirect to=\"/exam/done/\" /> : <TakeExam />}\n          </Route>\n          <Route exact path=\"/exam/done/\">\n            {examFinished ? (\n              <Layout header={<ExamProgress />} mainContent={<ExamEnd />} />\n            ) : (\n              <Redirect to=\"/exam/\" />\n            )}\n          </Route>\n          <Route path=\"/\">\n            <Redirect to=\"/exam/\" />\n          </Route>\n        </>\n      );\n    } else if (user.role === \"admin\") {\n      return (\n        <Route path=\"/\">\n          <MakeExam />\n        </Route>\n      );\n    } else {\n      return (\n        <>\n          <Route path=\"/login/\">\n            <Login />\n          </Route>\n          <Route path=\"/\">\n            <Redirect to=\"/login/\" />\n          </Route>\n        </>\n      );\n    }\n  };\n\n  return <Switch>{makeRoutes()}</Switch>;\n}\n"]},"metadata":{},"sourceType":"module"}