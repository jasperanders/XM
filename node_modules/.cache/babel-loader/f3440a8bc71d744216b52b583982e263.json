{"ast":null,"code":"import{combineReducers}from\"@reduxjs/toolkit\";import produce from\"immer\";import{ANSWER_FREE_TEXT_QUESTION,ANSWER_MULTIPLE_CHOICE_QUESTION,SET_ANSWER_START_TIME,SET_ANSWER_END_TIME,NEXT_QUESTION,SET_CURRENT_QUESTION_ID,SET_ANSWER_TABLE,SET_EXAM_TABLE,SET_EXAM_STATE,SET_QUESTION_BODY_MULTIPLE_CHOICE_TABLE,SET_QUESTION_BODY_FREE_TEXT_TABLE,SET_ANSWER_BODY_MULTIPLE_CHOICE_TABLE,SET_ANSWER_BODY_FREE_TEXT_TABLE,SET_QUESTION_TABLE}from\"./actions\";import{initialAnswerTable,initialExamState,initialExamTable,initialQuestionTable,initialAnswerBodyMultipleChoiceTable,initialQuestionBodyMultipleChoiceTable,initialAnswerBodyFreeTextTable,initialQuestionBodyFreeTextTable}from\"./initialState\";// ================= Basic Tables =====================\nfunction questionTable(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialQuestionTable;var _ref=arguments.length>1?arguments[1]:undefined,type=_ref.type,payload=_ref.payload;switch(type){case SET_QUESTION_TABLE:return produce(state,function(d){d=payload.newTable;return d;});default:return state;}}function answerTable(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialAnswerTable;var _ref2=arguments.length>1?arguments[1]:undefined,type=_ref2.type,payload=_ref2.payload;switch(type){case SET_ANSWER_TABLE:return produce(state,function(d){d=payload.newTable;return d;});case SET_ANSWER_START_TIME:return produce(state,function(d){var answer=d.byId[payload.questionId];if(answer.timeStart===null){answer.timeStart=Date.now();}});case SET_ANSWER_END_TIME:return produce(state,function(d){var answer=d.byId[payload.questionId];answer.timeEnd=Date.now();answer.timeExpired=true;});default:return state;}}function examTable(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialExamTable;var _ref3=arguments.length>1?arguments[1]:undefined,type=_ref3.type,payload=_ref3.payload;switch(type){case SET_EXAM_TABLE:return produce(state,function(d){d=payload.newTable;return d;});default:return state;}}function examState(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialExamState;var _ref4=arguments.length>1?arguments[1]:undefined,type=_ref4.type,payload=_ref4.payload;switch(type){case SET_EXAM_STATE:return produce(state,function(d){d=payload.newTable;return d;});case NEXT_QUESTION:return produce(state,function(d){if(payload.currentExam.questionsById.length>d.currentQuestionIndex+1// else index out of bounds\n){d.currentQuestionIndex+=1;d.currentQuestionId=payload.currentExam.questionsById[d.currentQuestionIndex];}else{d.examFinished=true;}});case SET_CURRENT_QUESTION_ID:return produce(state,function(d){d.currentQuestionId=payload.newQuestionId;d.currentQuestionIndex=payload.newQuestionIndex?payload.newQuestionIndex:null;});default:return state;}}// ================= Body Tables =====================\nfunction questionBodyMultipleChoiceTable(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialQuestionBodyMultipleChoiceTable;var _ref5=arguments.length>1?arguments[1]:undefined,type=_ref5.type,payload=_ref5.payload;switch(type){case SET_QUESTION_BODY_MULTIPLE_CHOICE_TABLE:return produce(state,function(d){d=payload.newTable;return d;});default:return state;}}function questionBodyFreeTextTable(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialQuestionBodyFreeTextTable;var _ref6=arguments.length>1?arguments[1]:undefined,type=_ref6.type,payload=_ref6.payload;switch(type){case SET_QUESTION_BODY_FREE_TEXT_TABLE:return produce(state,function(d){d=payload.newTable;return d;});default:return state;}}function answerBodyFreeTextTable(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialAnswerBodyFreeTextTable;var _ref7=arguments.length>1?arguments[1]:undefined,type=_ref7.type,payload=_ref7.payload;switch(type){case SET_ANSWER_BODY_FREE_TEXT_TABLE:return produce(state,function(d){d=payload.newTable;return d;});case ANSWER_FREE_TEXT_QUESTION:return produce(state,function(d){var answer=d.byId[payload.questionId];answer.answerText=payload.answer;});default:return state;}}function answerBodyMultipleChoiceTable(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialAnswerBodyMultipleChoiceTable;var _ref8=arguments.length>1?arguments[1]:undefined,type=_ref8.type,payload=_ref8.payload;switch(type){case SET_ANSWER_BODY_MULTIPLE_CHOICE_TABLE:return produce(state,function(d){d=payload.newTable;return d;});case ANSWER_MULTIPLE_CHOICE_QUESTION:return produce(state,function(d){d.byId[payload.questionId].selectedAnswers=payload.selectedAnswers;});default:return state;}}// =================== Root Reducer =================\nexport var rootReducer=combineReducers({examTable:examTable,questionTable:questionTable,answerTable:answerTable,questionBodyMultipleChoiceTable:questionBodyMultipleChoiceTable,questionBodyFreeTextTable:questionBodyFreeTextTable,answerBodyFreeTextTable:answerBodyFreeTextTable,answerBodyMultipleChoiceTable:answerBodyMultipleChoiceTable,examState:examState});export default rootReducer;","map":{"version":3,"sources":["/home/jasper/Documents/Uni/BachelorArbeit/XM/frontend/src/redux/reducers.ts"],"names":["combineReducers","produce","ANSWER_FREE_TEXT_QUESTION","ANSWER_MULTIPLE_CHOICE_QUESTION","SET_ANSWER_START_TIME","SET_ANSWER_END_TIME","NEXT_QUESTION","SET_CURRENT_QUESTION_ID","SET_ANSWER_TABLE","SET_EXAM_TABLE","SET_EXAM_STATE","SET_QUESTION_BODY_MULTIPLE_CHOICE_TABLE","SET_QUESTION_BODY_FREE_TEXT_TABLE","SET_ANSWER_BODY_MULTIPLE_CHOICE_TABLE","SET_ANSWER_BODY_FREE_TEXT_TABLE","SET_QUESTION_TABLE","initialAnswerTable","initialExamState","initialExamTable","initialQuestionTable","initialAnswerBodyMultipleChoiceTable","initialQuestionBodyMultipleChoiceTable","initialAnswerBodyFreeTextTable","initialQuestionBodyFreeTextTable","questionTable","state","type","payload","d","newTable","answerTable","answer","byId","questionId","timeStart","Date","now","timeEnd","timeExpired","examTable","examState","currentExam","questionsById","length","currentQuestionIndex","currentQuestionId","examFinished","newQuestionId","newQuestionIndex","questionBodyMultipleChoiceTable","questionBodyFreeTextTable","answerBodyFreeTextTable","answerText","answerBodyMultipleChoiceTable","selectedAnswers","rootReducer"],"mappings":"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","sourcesContent":["import { combineReducers } from \"@reduxjs/toolkit\";\nimport produce from \"immer\";\nimport {\n  ANSWER_FREE_TEXT_QUESTION,\n  ANSWER_MULTIPLE_CHOICE_QUESTION,\n  SET_ANSWER_START_TIME,\n  SET_ANSWER_END_TIME,\n  NEXT_QUESTION,\n  SET_APP_TIMER,\n  COUNT_DOWN_APP_TIMER,\n  SET_CURRENT_QUESTION_ID,\n  SET_ANSWER_TABLE,\n  SET_EXAM_TABLE,\n  SET_EXAM_STATE,\n  SET_QUESTION_BODY_MULTIPLE_CHOICE_TABLE,\n  SET_QUESTION_BODY_FREE_TEXT_TABLE,\n  SET_ANSWER_BODY_MULTIPLE_CHOICE_TABLE,\n  SET_ANSWER_BODY_FREE_TEXT_TABLE,\n  SET_QUESTION_TABLE,\n} from \"./actions\";\nimport {\n  initialAnswerTable,\n  initialExamState,\n  initialExamTable,\n  initialQuestionTable,\n  initialAnswerBodyMultipleChoiceTable,\n  initialQuestionBodyMultipleChoiceTable,\n  initialAnswerBodyFreeTextTable,\n  initialQuestionBodyFreeTextTable,\n} from \"./initialState\";\nimport { history } from \"../index\";\n\n// ================= Basic Tables =====================\n\nfunction questionTable(state = initialQuestionTable, { type, payload }) {\n  switch (type) {\n    case SET_QUESTION_TABLE:\n      return produce(state, (d) => {\n        d = payload.newTable;\n        return d;\n      });\n    default:\n      return state;\n  }\n}\n\nfunction answerTable(state = initialAnswerTable, { type, payload }) {\n  switch (type) {\n    case SET_ANSWER_TABLE:\n      return produce(state, (d) => {\n        d = payload.newTable;\n        return d;\n      });\n    case SET_ANSWER_START_TIME:\n      return produce(state, (d) => {\n        const answer = d.byId[payload.questionId];\n        if (answer.timeStart === null) {\n          answer.timeStart = Date.now();\n        }\n      });\n    case SET_ANSWER_END_TIME:\n      return produce(state, (d) => {\n        let answer = d.byId[payload.questionId];\n        answer.timeEnd = Date.now();\n        answer.timeExpired = true;\n      });\n\n    default:\n      return state;\n  }\n}\n\nfunction examTable(state = initialExamTable, { type, payload }) {\n  switch (type) {\n    case SET_EXAM_TABLE:\n      return produce(state, (d) => {\n        d = payload.newTable;\n        return d;\n      });\n    default:\n      return state;\n  }\n}\n\nfunction examState(state = initialExamState, { type, payload }) {\n  switch (type) {\n    case SET_EXAM_STATE:\n      return produce(state, (d) => {\n        d = payload.newTable;\n        return d;\n      });\n    case NEXT_QUESTION:\n      return produce(state, (d) => {\n        if (\n          payload.currentExam.questionsById.length >\n          d.currentQuestionIndex + 1 // else index out of bounds\n        ) {\n          d.currentQuestionIndex += 1;\n          d.currentQuestionId =\n            payload.currentExam.questionsById[d.currentQuestionIndex];\n        } else {\n          d.examFinished = true;\n        }\n      });\n    case SET_CURRENT_QUESTION_ID:\n      return produce(state, (d) => {\n        d.currentQuestionId = payload.newQuestionId;\n        d.currentQuestionIndex = payload.newQuestionIndex\n          ? payload.newQuestionIndex\n          : null;\n      });\n\n    default:\n      return state;\n  }\n}\n\n// ================= Body Tables =====================\n\nfunction questionBodyMultipleChoiceTable(\n  state = initialQuestionBodyMultipleChoiceTable,\n  { type, payload }\n) {\n  switch (type) {\n    case SET_QUESTION_BODY_MULTIPLE_CHOICE_TABLE:\n      return produce(state, (d) => {\n        d = payload.newTable;\n        return d;\n      });\n    default:\n      return state;\n  }\n}\n\nfunction questionBodyFreeTextTable(\n  state = initialQuestionBodyFreeTextTable,\n  { type, payload }\n) {\n  switch (type) {\n    case SET_QUESTION_BODY_FREE_TEXT_TABLE:\n      return produce(state, (d) => {\n        d = payload.newTable;\n        return d;\n      });\n    default:\n      return state;\n  }\n}\n\nfunction answerBodyFreeTextTable(\n  state = initialAnswerBodyFreeTextTable,\n  { type, payload }\n) {\n  switch (type) {\n    case SET_ANSWER_BODY_FREE_TEXT_TABLE:\n      return produce(state, (d) => {\n        d = payload.newTable;\n        return d;\n      });\n    case ANSWER_FREE_TEXT_QUESTION:\n      return produce(state, (d) => {\n        const answer = d.byId[payload.questionId];\n        answer.answerText = payload.answer;\n      });\n\n    default:\n      return state;\n  }\n}\n\nfunction answerBodyMultipleChoiceTable(\n  state = initialAnswerBodyMultipleChoiceTable,\n  { type, payload }\n) {\n  switch (type) {\n    case SET_ANSWER_BODY_MULTIPLE_CHOICE_TABLE:\n      return produce(state, (d) => {\n        d = payload.newTable;\n        return d;\n      });\n    case ANSWER_MULTIPLE_CHOICE_QUESTION:\n      return produce(state, (d) => {\n        d.byId[payload.questionId].selectedAnswers = payload.selectedAnswers;\n      });\n    default:\n      return state;\n  }\n}\n\n// =================== Root Reducer =================\n\nexport const rootReducer = combineReducers({\n  examTable,\n  questionTable,\n  answerTable,\n  questionBodyMultipleChoiceTable,\n  questionBodyFreeTextTable,\n  answerBodyFreeTextTable,\n  answerBodyMultipleChoiceTable,\n  examState,\n});\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}