{"ast":null,"code":"var _jsxFileName = \"/home/jasper/Documents/Uni/BachelorArbeit/XM/frontend/src/components/make/Question/index.tsx\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Textarea, Button, Input } from \"theme-ui\";\nimport { useForm } from \"react-hook-form\";\nexport default function FreeTexTFreeTextQuestion() {\n  /**\n   * Redux Hooks\n   */\n  const dispatch = useDispatch();\n  const currentExam = useSelector(state => state.examTable);\n  const {\n    currentExamId\n  } = useSelector(state => state.examState);\n  /**\n   * Form Hook\n   */\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors,\n    reset,\n    getValues\n  } = useForm();\n  /**\n   * Effect Hooks\n   */\n  // useEffect(() => {\n  //   setCurrentAnswerAction(() => {\n  //     return () => {\n  //       // {nested: true} returns values as if they were submitted\n  //       const answer = getValues({ nest: true })[freeTextFormName];\n  //       console.log(answer);\n  //       console.log(\"selectedAnswers\");\n  //       return answerFreeTextQuestion({\n  //         questionId: questionId,\n  //         answer,\n  //       });\n  //     };\n  //   });\n  // }, [question]);\n  // const { questionId } = question;\n\n  const onSubmit = data => {\n    console.log(\"submitted\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    ref: register,\n    name: \"questionTitle\",\n    defaultValue: \"Provide a Question Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Textarea, {\n    rows: 5,\n    columns: 5,\n    name: \"masterAnswer\",\n    defaultValue: \"Provide a  Question\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Textarea, {\n    rows: 10,\n    columns: 20,\n    name: \"masterAnswer\",\n    defaultValue: \"Provide master Answer here\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"Save and Next Question\"));\n}","map":{"version":3,"sources":["/home/jasper/Documents/Uni/BachelorArbeit/XM/frontend/src/components/make/Question/index.tsx"],"names":["React","useDispatch","useSelector","Textarea","Button","Input","useForm","FreeTexTFreeTextQuestion","dispatch","currentExam","state","examTable","currentExamId","examState","register","handleSubmit","watch","errors","reset","getValues","onSubmit","data","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAGA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,KAA3B,QAAwC,UAAxC;AAGA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,eAAe,SAASC,wBAAT,GAAoC;AACjD;;;AAIA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,WAAW,GAAGP,WAAW,CAAEQ,KAAD,IAAuBA,KAAK,CAACC,SAA9B,CAA/B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAoBV,WAAW,CAAEQ,KAAD,IAAuBA,KAAK,CAACG,SAA9B,CAArC;AAEA;;;;AAIA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA,MAAjC;AAAyCC,IAAAA,KAAzC;AAAgDC,IAAAA;AAAhD,MAA8Db,OAAO,EAA3E;AAEA;;;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,QAAMc,QAAQ,GAAIC,IAAD,IAAU;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,GAFD;;AAIA,sBACE;AAAM,IAAA,QAAQ,EAAER,YAAY,CAACK,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,GAAG,EAAEN,QADP;AAEE,IAAA,IAAI,EAAE,eAFR;AAGE,IAAA,YAAY,EAAC,0BAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,QAAD;AACE,IAAA,IAAI,EAAE,CADR;AAEE,IAAA,OAAO,EAAE,CAFX;AAGE,IAAA,IAAI,EAAE,cAHR;AAIE,IAAA,YAAY,EAAE,qBAJhB;AAKE,IAAA,GAAG,EAAEA,QALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAaE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAE,EADR;AAEE,IAAA,OAAO,EAAE,EAFX;AAGE,IAAA,IAAI,EAAE,cAHR;AAIE,IAAA,YAAY,EAAE,4BAJhB;AAKE,IAAA,GAAG,EAAEA,QALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,eAoBE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BApBF,CADF;AAwBD","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { freeTextFormName } from \"../../../constants/constants\";\nimport { Textarea, Button, Input } from \"theme-ui\";\nimport { answerFreeTextQuestion, nextQuestion } from \"../../../redux/actions\";\nimport { TRootState } from \"../../../types/examTypes\";\nimport { useForm } from \"react-hook-form\";\n\nexport default function FreeTexTFreeTextQuestion() {\n  /**\n   * Redux Hooks\n   */\n\n  const dispatch = useDispatch();\n  const currentExam = useSelector((state: TRootState) => state.examTable);\n  const { currentExamId } = useSelector((state: TRootState) => state.examState);\n\n  /**\n   * Form Hook\n   */\n\n  const { register, handleSubmit, watch, errors, reset, getValues } = useForm();\n\n  /**\n   * Effect Hooks\n   */\n\n  // useEffect(() => {\n  //   setCurrentAnswerAction(() => {\n  //     return () => {\n  //       // {nested: true} returns values as if they were submitted\n  //       const answer = getValues({ nest: true })[freeTextFormName];\n\n  //       console.log(answer);\n  //       console.log(\"selectedAnswers\");\n  //       return answerFreeTextQuestion({\n  //         questionId: questionId,\n  //         answer,\n  //       });\n  //     };\n  //   });\n  // }, [question]);\n\n  // const { questionId } = question;\n\n  const onSubmit = (data) => {\n    console.log(\"submitted\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Input\n        ref={register}\n        name={\"questionTitle\"}\n        defaultValue=\"Provide a Question Title\"\n      />\n      <Textarea\n        rows={5}\n        columns={5}\n        name={\"masterAnswer\"}\n        defaultValue={\"Provide a  Question\"}\n        ref={register}\n      />\n      <Textarea\n        rows={10}\n        columns={20}\n        name={\"masterAnswer\"}\n        defaultValue={\"Provide master Answer here\"}\n        ref={register}\n      />\n      <Button type=\"submit\">Save and Next Question</Button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}