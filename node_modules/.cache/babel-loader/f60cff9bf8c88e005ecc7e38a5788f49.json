{"ast":null,"code":"import{v4}from\"uuid\";// ============== Task 01 ===================\nvar question_01={questionId:v4(),questionType:\"freeText\",timeLimitMs:40000,title:\"That is the Question\",text:\"What does the Fox say?\"};var answer_01={answerId:v4(),questionId:question_01.questionId,timeStart:null,timeEnd:null,timeExpired:false};var question_01_body={questionBodyId:v4(),questionId:question_01.questionId};var answer_01_body={answerId:question_01.questionId,questionId:question_01_body.questionId,answerText:\"\"};// ============== Task 02 ===================\nvar question_02={questionId:v4(),questionType:\"freeText\",timeLimitMs:50000,title:\"Even better Question\",text:\"How many roads must a man walk down?\"};var answer_02={answerId:v4(),questionId:question_02.questionId,timeStart:null,timeEnd:null,timeExpired:false};var question_02_body={questionBodyId:v4(),questionId:question_02.questionId};var answer_02_body={questionId:question_02.questionId,answerId:answer_02.answerId,answerText:\"\"};// ============== Task 03 ===================\nvar question_03={questionId:v4(),questionType:\"multipleChoice\",timeLimitMs:60000,title:\"Your choice\",text:\"Yes or No?\"};var answer_03={answerId:v4(),questionId:question_03.questionId,timeStart:null,timeEnd:null,timeExpired:false};var question_03_body={questionId:question_03.questionId,possibleAnswers:[\"Yes\",\"No\"]};var answer_03_body={questionId:question_03.questionId,answerId:answer_03.answerId,selectedAnswers:[]};// =============== exam_01 ===========\nvar exam_01={examId:v4(),name:\"Platform Economy\",questionsById:[question_03.questionId,question_01.questionId,question_02.questionId]};// =============== tables ================\nexport var initialQuestionTable={byId:{},allIds:[]};export var initialAnswerTable={byId:{},allIds:[]};export var initialExamTable={byId:{},allIds:[]};// ================ Body Table ===================\nexport var initialQuestionBodyFreeTextTable={byId:{},allIds:[]};export var initialQuestionBodyMultipleChoiceTable={byId:{},allIds:[]};export var initialAnswerBodyFreeTextTable={byId:{},allIds:[]};export var initialAnswerBodyMultipleChoiceTable={byId:{},allIds:[]};// =============== Exam State ====================\nexport var initialExamState={currentExamId:null,currentQuestionIndex:null,// currentQuestionId: null,\ncurrentQuestionId:null,currentTime:null,timerIsActive:true,examFinished:false};// =========================================\n// =========================================\n/*\nexport const initialExam: TExamState = {\n  byId: {\n    exam_01: {\n      id: \"exam_01\",\n      name: \"Platform Economy\",\n      questionsById: [\"question_01\", \"question_03\", \"question_02\"],\n    },\n  },\n  allIds: [\"exam_01\"],\n  currentExam: {\n    id: \"exam_01\",\n    currentQuestionIndex: 0,\n  },\n};\n\nexport const initialQuestions: TFreeTextQuestionState = {\n  byId: {\n    question_01: {\n      questionId: \"question_01\",\n      questionTitle: \"General Question\",\n      questionText: \"What does the fox say?\",\n      answerType: \"freeText\",\n      answerText: \"quest01\",\n      timeLimit: 20,\n      timeUsed: null,\n      timeStart: null,\n      timeEnd: null,\n      timeExpired: false,\n    },\n    question_02: {\n      questionId: \"question_02\",\n      questionTitle: \"General Question\",\n      questionText: \"How many roads must a man walk down?\",\n      answerType: \"freeText\",\n      answerText: \"quest02\",\n      timeLimit: 20,\n      timeUsed: null,\n      timeStart: null,\n      timeEnd: null,\n      timeExpired: false,\n    },\n  },\n  allIds: [\"question_01\", \"question_02\"],\n};\n\nexport const initialMultipleChoiceQuestions: TMultipleChoiceQuestionState = {\n  byId: {\n    question_03: {\n      questionId: \"question_03\",\n      questionTitle: \"\",\n      questionText: \"Ja, oder Nein\",\n      answerType: \"multipleChoice\",\n      possibleAnswers: [\"Ja\", \"Nein\"],\n      answerSelection: [],\n      timeLimit: 51,\n      timeUsed: null,\n      timeStart: null,\n      timeEnd: null,\n      timeExpired: false,\n    },\n  },\n  allIds: [\"question_03\"],\n};\n\nexport const initialQuestionTypes: TQuestionTypes = {\n  byId: {\n    question_01: {\n      questionId: \"question_01\",\n      questionType: \"freeTextQuestion\",\n    },\n    question_02: {\n      questionId: \"question_02\",\n      questionType: \"freeTextQuestion\",\n    },\n    question_03: {\n      questionId: \"question_03\",\n      questionType: \"multipleChoiceQuestion\",\n    },\n  },\n  allIds: [\"question_01\", \"question_02\", \"question_03\"],\n};\n\nexport const initialAppState = {\n  currentTime: null,\n  timerIsActive: true,\n};\n*/","map":{"version":3,"sources":["/home/jasper/Documents/Uni/BachelorArbeit/XM/frontend/src/redux/initialState.ts"],"names":["v4","question_01","questionId","questionType","timeLimitMs","title","text","answer_01","answerId","timeStart","timeEnd","timeExpired","question_01_body","questionBodyId","answer_01_body","answerText","question_02","answer_02","question_02_body","answer_02_body","question_03","answer_03","question_03_body","possibleAnswers","answer_03_body","selectedAnswers","exam_01","examId","name","questionsById","initialQuestionTable","byId","allIds","initialAnswerTable","initialExamTable","initialQuestionBodyFreeTextTable","initialQuestionBodyMultipleChoiceTable","initialAnswerBodyFreeTextTable","initialAnswerBodyMultipleChoiceTable","initialExamState","currentExamId","currentQuestionIndex","currentQuestionId","currentTime","timerIsActive","examFinished"],"mappings":"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","sourcesContent":["import { v4 } from \"uuid\";\nimport {\n  TQuestion,\n  TQuestionBodyFreeText,\n  TQuestionBodyMultipleChoice,\n  TAnswerBodyFreeText,\n  TAnswerBodyMultipleChoice,\n  TAnswer,\n  TExam,\n  TQuestionTable,\n  TExamTable,\n  TAnswerTable,\n  TExamState,\n  TQuestionBodyMultipleChoiceTable,\n  TQuestionBodyFreeTextTable,\n  TAnswerBodyFreeTextTable,\n  TAnswerBodyMultipleChoiceTable,\n} from \"../types/examTypes\";\n\n// ============== Task 01 ===================\nconst question_01: TQuestion = {\n  questionId: v4(),\n  questionType: \"freeText\",\n  timeLimitMs: 40000,\n  title: \"That is the Question\",\n  text: \"What does the Fox say?\",\n};\n\nconst answer_01: TAnswer = {\n  answerId: v4(),\n  questionId: question_01.questionId,\n  timeStart: null,\n  timeEnd: null,\n  timeExpired: false,\n};\n\nconst question_01_body: TQuestionBodyFreeText = {\n  questionBodyId: v4(),\n  questionId: question_01.questionId,\n};\n\nconst answer_01_body: TAnswerBodyFreeText = {\n  answerId: question_01.questionId,\n  questionId: question_01_body.questionId,\n  answerText: \"\",\n};\n\n// ============== Task 02 ===================\nconst question_02: TQuestion = {\n  questionId: v4(),\n  questionType: \"freeText\",\n  timeLimitMs: 50000,\n  title: \"Even better Question\",\n  text: \"How many roads must a man walk down?\",\n};\n\nconst answer_02: TAnswer = {\n  answerId: v4(),\n  questionId: question_02.questionId,\n  timeStart: null,\n  timeEnd: null,\n  timeExpired: false,\n};\n\nconst question_02_body: TQuestionBodyFreeText = {\n  questionBodyId: v4(),\n  questionId: question_02.questionId,\n};\n\nconst answer_02_body: TAnswerBodyFreeText = {\n  questionId: question_02.questionId,\n  answerId: answer_02.answerId,\n  answerText: \"\",\n};\n\n// ============== Task 03 ===================\n\nconst question_03: TQuestion = {\n  questionId: v4(),\n  questionType: \"multipleChoice\",\n  timeLimitMs: 60000,\n  title: \"Your choice\",\n  text: \"Yes or No?\",\n};\n\nconst answer_03: TAnswer = {\n  answerId: v4(),\n  questionId: question_03.questionId,\n  timeStart: null,\n  timeEnd: null,\n  timeExpired: false,\n};\n\nconst question_03_body: TQuestionBodyMultipleChoice = {\n  questionId: question_03.questionId,\n  possibleAnswers: [\"Yes\", \"No\"],\n};\n\nconst answer_03_body: TAnswerBodyMultipleChoice = {\n  questionId: question_03.questionId,\n  answerId: answer_03.answerId,\n  selectedAnswers: [],\n};\n\n// =============== exam_01 ===========\n\nconst exam_01: TExam = {\n  examId: v4(),\n  name: \"Platform Economy\",\n  questionsById: [\n    question_03.questionId,\n    question_01.questionId,\n    question_02.questionId,\n  ],\n};\n\n// =============== tables ================\n\nexport const initialQuestionTable: TQuestionTable = {\n  byId: {},\n  allIds: [],\n};\n\nexport const initialAnswerTable: TAnswerTable = {\n  byId: {},\n  allIds: [],\n};\n\nexport const initialExamTable: TExamTable = {\n  byId: {},\n  allIds: [],\n};\n\n// ================ Body Table ===================\nexport const initialQuestionBodyFreeTextTable: TQuestionBodyFreeTextTable = {\n  byId: {},\n  allIds: [],\n};\n\nexport const initialQuestionBodyMultipleChoiceTable: TQuestionBodyMultipleChoiceTable = {\n  byId: {},\n  allIds: [],\n};\n\nexport const initialAnswerBodyFreeTextTable: TAnswerBodyFreeTextTable = {\n  byId: {},\n  allIds: [],\n};\n\nexport const initialAnswerBodyMultipleChoiceTable: TAnswerBodyMultipleChoiceTable = {\n  byId: {},\n  allIds: [],\n};\n\n// =============== Exam State ====================\n\nexport const initialExamState: TExamState = {\n  currentExamId: null,\n  currentQuestionIndex: null,\n  // currentQuestionId: null,\n  currentQuestionId: null,\n  currentTime: null,\n  timerIsActive: true,\n  examFinished: false,\n};\n\n// =========================================\n// =========================================\n/*\nexport const initialExam: TExamState = {\n  byId: {\n    exam_01: {\n      id: \"exam_01\",\n      name: \"Platform Economy\",\n      questionsById: [\"question_01\", \"question_03\", \"question_02\"],\n    },\n  },\n  allIds: [\"exam_01\"],\n  currentExam: {\n    id: \"exam_01\",\n    currentQuestionIndex: 0,\n  },\n};\n\nexport const initialQuestions: TFreeTextQuestionState = {\n  byId: {\n    question_01: {\n      questionId: \"question_01\",\n      questionTitle: \"General Question\",\n      questionText: \"What does the fox say?\",\n      answerType: \"freeText\",\n      answerText: \"quest01\",\n      timeLimit: 20,\n      timeUsed: null,\n      timeStart: null,\n      timeEnd: null,\n      timeExpired: false,\n    },\n    question_02: {\n      questionId: \"question_02\",\n      questionTitle: \"General Question\",\n      questionText: \"How many roads must a man walk down?\",\n      answerType: \"freeText\",\n      answerText: \"quest02\",\n      timeLimit: 20,\n      timeUsed: null,\n      timeStart: null,\n      timeEnd: null,\n      timeExpired: false,\n    },\n  },\n  allIds: [\"question_01\", \"question_02\"],\n};\n\nexport const initialMultipleChoiceQuestions: TMultipleChoiceQuestionState = {\n  byId: {\n    question_03: {\n      questionId: \"question_03\",\n      questionTitle: \"\",\n      questionText: \"Ja, oder Nein\",\n      answerType: \"multipleChoice\",\n      possibleAnswers: [\"Ja\", \"Nein\"],\n      answerSelection: [],\n      timeLimit: 51,\n      timeUsed: null,\n      timeStart: null,\n      timeEnd: null,\n      timeExpired: false,\n    },\n  },\n  allIds: [\"question_03\"],\n};\n\nexport const initialQuestionTypes: TQuestionTypes = {\n  byId: {\n    question_01: {\n      questionId: \"question_01\",\n      questionType: \"freeTextQuestion\",\n    },\n    question_02: {\n      questionId: \"question_02\",\n      questionType: \"freeTextQuestion\",\n    },\n    question_03: {\n      questionId: \"question_03\",\n      questionType: \"multipleChoiceQuestion\",\n    },\n  },\n  allIds: [\"question_01\", \"question_02\", \"question_03\"],\n};\n\nexport const initialAppState = {\n  currentTime: null,\n  timerIsActive: true,\n};\n*/\n"]},"metadata":{},"sourceType":"module"}