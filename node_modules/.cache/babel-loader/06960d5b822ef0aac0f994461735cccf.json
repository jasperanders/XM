{"ast":null,"code":"var _jsxFileName = \"/home/jasper/Documents/Uni/BachelorArbeit/XM/src/components/question/questionType/FreeTextQuestion.tsx\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { freeTextFormName } from \"../../../constants/constants\";\nimport { Textarea, Button } from \"theme-ui\";\nimport { answerFreeTextQuestion, seTFreeTextQuestionEndTime, nexTFreeTextQuestion } from \"../../../redux/actions\";\nexport default function FreeTexTFreeTextQuestion({\n  register,\n  handleSubmit,\n  watch,\n  errors,\n  question\n}) {\n  const dispatch = useDispatch();\n  const {\n    questionId,\n    answerType,\n    questionText,\n    questionTitle\n  } = question;\n\n  const onSubmit = data => {\n    const answer = data.freeTextFormName;\n    const payload = {\n      questionId,\n      answer\n    };\n    action = answerFreeTextQuestion(payload);\n    dispatch(action);\n    dispatch(seTFreeTextQuestionEndTime({\n      questionId\n    }));\n    dispatch(nexTFreeTextQuestion());\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Textarea, {\n    rows: 10,\n    columns: 20,\n    onPaste: e => {\n      e.preventDefault();\n      return false;\n    },\n    onCopy: e => {\n      e.preventDefault();\n      return false;\n    },\n    name: freeTextFormName,\n    defaultValue: question.storedAnswer,\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Save and Next Question\"));\n}","map":{"version":3,"sources":["/home/jasper/Documents/Uni/BachelorArbeit/XM/src/components/question/questionType/FreeTextQuestion.tsx"],"names":["React","useDispatch","freeTextFormName","Textarea","Button","answerFreeTextQuestion","seTFreeTextQuestionEndTime","nexTFreeTextQuestion","FreeTexTFreeTextQuestion","register","handleSubmit","watch","errors","question","dispatch","questionId","answerType","questionText","questionTitle","onSubmit","data","answer","payload","action","e","preventDefault","storedAnswer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAAyC,aAAzC;AAEA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,UAAjC;AACA,SACEC,sBADF,EAEEC,0BAFF,EAGEC,oBAHF,QAIO,wBAJP;AAMA,eAAe,SAASC,wBAAT,CAAkC;AAC/CC,EAAAA,QAD+C;AAE/CC,EAAAA,YAF+C;AAG/CC,EAAAA,KAH+C;AAI/CC,EAAAA,MAJ+C;AAK/CC,EAAAA;AAL+C,CAAlC,EAMZ;AACD,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AAEA,QAAM;AAAEc,IAAAA,UAAF;AAAcC,IAAAA,UAAd;AAA0BC,IAAAA,YAA1B;AAAwCC,IAAAA;AAAxC,MAA0DL,QAAhE;;AAEA,QAAMM,QAAQ,GAAIC,IAAD,IAAU;AACzB,UAAMC,MAAM,GAAGD,IAAI,CAAClB,gBAApB;AACA,UAAMoB,OAAO,GAAG;AAAEP,MAAAA,UAAF;AAAcM,MAAAA;AAAd,KAAhB;AACAE,IAAAA,MAAM,GAAGlB,sBAAsB,CAACiB,OAAD,CAA/B;AAEAR,IAAAA,QAAQ,CAACS,MAAD,CAAR;AACAT,IAAAA,QAAQ,CAACR,0BAA0B,CAAC;AAAES,MAAAA;AAAF,KAAD,CAA3B,CAAR;AACAD,IAAAA,QAAQ,CAACP,oBAAoB,EAArB,CAAR;AACD,GARD;;AAUA,sBACE;AAAM,IAAA,QAAQ,EAAEG,YAAY,CAACS,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAE,EADR;AAEE,IAAA,OAAO,EAAE,EAFX;AAGE,IAAA,OAAO,EAAGK,CAAD,IAAO;AACdA,MAAAA,CAAC,CAACC,cAAF;AACA,aAAO,KAAP;AACD,KANH;AAOE,IAAA,MAAM,EAAGD,CAAD,IAAO;AACbA,MAAAA,CAAC,CAACC,cAAF;AACA,aAAO,KAAP;AACD,KAVH;AAWE,IAAA,IAAI,EAAEvB,gBAXR;AAYE,IAAA,YAAY,EAAEW,QAAQ,CAACa,YAZzB;AAaE,IAAA,GAAG,EAAEjB,QAbP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAgBE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAhBF,CADF;AAoBD","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { freeTextFormName } from \"../../../constants/constants\";\nimport { Textarea, Button } from \"theme-ui\";\nimport {\n  answerFreeTextQuestion,\n  seTFreeTextQuestionEndTime,\n  nexTFreeTextQuestion,\n} from \"../../../redux/actions\";\n\nexport default function FreeTexTFreeTextQuestion({\n  register,\n  handleSubmit,\n  watch,\n  errors,\n  question,\n}) {\n  const dispatch = useDispatch();\n\n  const { questionId, answerType, questionText, questionTitle } = question;\n\n  const onSubmit = (data) => {\n    const answer = data.freeTextFormName\n    const payload = { questionId, answer };\n    action = answerFreeTextQuestion(payload);\n\n    dispatch(action);\n    dispatch(seTFreeTextQuestionEndTime({ questionId }));\n    dispatch(nexTFreeTextQuestion());\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Textarea\n        rows={10}\n        columns={20}\n        onPaste={(e) => {\n          e.preventDefault();\n          return false;\n        }}\n        onCopy={(e) => {\n          e.preventDefault();\n          return false;\n        }}\n        name={freeTextFormName}\n        defaultValue={question.storedAnswer}\n        ref={register}\n      />\n      <Button type=\"submit\">Save and Next Question</Button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}