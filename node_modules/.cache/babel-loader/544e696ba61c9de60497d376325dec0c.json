{"ast":null,"code":"var _jsxFileName = \"/home/jasper/Documents/Uni/BachelorArbeit/XM/frontend/src/components/make/Exam/index.tsx\";\nimport React, { useContext, useState } from \"react\";\nimport { v4 } from \"uuid\";\nimport { useForm } from \"react-hook-form\";\nimport { Input, Badge, Heading, Select, Button } from \"theme-ui\";\nimport { ExamContext } from \"../../../services/examContext\";\nexport default function Exam() {\n  const {\n    allQuestions,\n    allUsers\n  } = useContext(ExamContext);\n  const [newExamState, setNewExamState] = useState({\n    addedUsers: [],\n    addedExams: []\n  });\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors,\n    reset,\n    getValues\n  } = useForm();\n\n  const addUser = () => {\n    const newUser = getValues().newUser;\n\n    if (!newExamState.addedUsers.find(el => newUser === el)) {\n      setNewExamState(old => ({ ...old,\n        addedUsers: [...old.addedUsers, newUser]\n      }));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    as: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Create New Exam\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(() => {}),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    sx: {\n      marginTop: \"1rem\"\n    },\n    ref: register,\n    name: \"questionTitle\",\n    placeholder: \"Provide a Exam Title here\",\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), newExamState.addedUsers.map(el => {\n    const person = JSON.parse(el);\n    return /*#__PURE__*/React.createElement(Badge, {\n      sx: {\n        margin: \"0.5rem\"\n      },\n      key: v4(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, person.name);\n  }), /*#__PURE__*/React.createElement(Select, {\n    ref: register,\n    name: \"newUser\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, allUsers.rows.map(el => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: v4(),\n      value: JSON.stringify(el),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, el.name);\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: addUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"+\")));\n}","map":{"version":3,"sources":["/home/jasper/Documents/Uni/BachelorArbeit/XM/frontend/src/components/make/Exam/index.tsx"],"names":["React","useContext","useState","v4","useForm","Input","Badge","Heading","Select","Button","ExamContext","Exam","allQuestions","allUsers","newExamState","setNewExamState","addedUsers","addedExams","register","handleSubmit","watch","errors","reset","getValues","addUser","newUser","find","el","old","marginTop","map","person","JSON","parse","margin","name","rows","stringify"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\nimport { v4 } from \"uuid\";\nimport { useForm } from \"react-hook-form\";\nimport { Input, Badge, Heading, Select, Button } from \"theme-ui\";\n\nimport { ExamContext } from \"../../../services/examContext\";\nimport { findAllByAltText } from \"@testing-library/react\";\n\nexport default function Exam() {\n  const { allQuestions, allUsers } = useContext(ExamContext);\n\n  const [newExamState, setNewExamState] = useState({\n    addedUsers: [],\n    addedExams: [],\n  });\n  const { register, handleSubmit, watch, errors, reset, getValues } = useForm();\n\n  const addUser = () => {\n    const newUser = getValues().newUser;\n    if (!newExamState.addedUsers.find((el) => newUser === el)) {\n      setNewExamState((old) => ({\n        ...old,\n        addedUsers: [...old.addedUsers, newUser],\n      }));\n    }\n  };\n\n  return (\n    <div>\n      <Heading as=\"h2\">Create New Exam</Heading>\n      <form onSubmit={handleSubmit(() => {})}>\n        <Input\n          sx={{ marginTop: \"1rem\" }}\n          ref={register}\n          name={\"questionTitle\"}\n          placeholder=\"Provide a Exam Title here\"\n          defaultValue={\"\"}\n        />\n\n        {newExamState.addedUsers.map((el) => {\n          const person = JSON.parse(el);\n          return (\n            <Badge sx={{ margin: \"0.5rem\" }} key={v4()}>\n              {person.name}\n            </Badge>\n          );\n        })}\n\n        <Select ref={register} name=\"newUser\">\n          {allUsers.rows.map((el) => {\n            return (\n              <option key={v4()} value={JSON.stringify(el)}>\n                {el.name}\n              </option>\n            );\n          })}\n        </Select>\n        {/* \n        {newExamState.addedUsers.map((el) => {\n          const question = JSON.parse(el);\n          return (\n            <Badge sx={{ margin: \"0.5rem\" }} key={v4()}>\n              {question.content.title}\n            </Badge>\n          );\n        })}\n\n        <Select ref={register} name=\"newQuestion\">\n          {allQuestions.rows.map((el) => {\n            return (\n              <option key={v4()} value={JSON.stringify(el)}>\n                {el.content.title}\n              </option>\n            );\n          })}\n        </Select> */}\n        <Button onClick={addUser}>+</Button>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}