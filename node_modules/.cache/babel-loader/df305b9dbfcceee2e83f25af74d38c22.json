{"ast":null,"code":"var _jsxFileName = \"/home/jasper/Documents/Uni/BachelorArbeit/XM/src/components/question/questionType/MultipleChoice.tsx\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Label, Checkbox, Button } from \"theme-ui\";\nexport default function MultipleChoiceQuestion({\n  register,\n  handleSubmit,\n  watch,\n  errors,\n  question\n}) {\n  const dispatch = useDispatch();\n  console.log(question);\n  const questionBody = useSelector(state => state.questionBodyMultipleChoiceTable.byId[question.questionId]);\n  const {\n    possibleAnswers\n  } = questionBody; // const onSubmit = (data) => {\n  //   let action = undefined;\n  //   switch (answerType) {\n  //     case \"freeText\":\n  //       const answer = data[freeTextFromName];\n  //       const payload = { questionId, answer };\n  //       action = answerFreeTextQuestion(payload);\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  //   dispatch(action);\n  //   dispatch(seTFreeTextQuestionEndTime({ questionId }));\n  //   dispatch(nexTFreeTextQuestion());\n  // };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(() => {}),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, possibleAnswers.forEach(possibleAnswer => {\n    console.log(possibleAnser);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, \"aaaaaaaaaa\", /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      defaultChecked: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }), possibleAnswer));\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Save and Next Question\"));\n}","map":{"version":3,"sources":["/home/jasper/Documents/Uni/BachelorArbeit/XM/src/components/question/questionType/MultipleChoice.tsx"],"names":["React","useDispatch","useSelector","Label","Checkbox","Button","MultipleChoiceQuestion","register","handleSubmit","watch","errors","question","dispatch","console","log","questionBody","state","questionBodyMultipleChoiceTable","byId","questionId","possibleAnswers","forEach","possibleAnswer","possibleAnser"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,UAAxC;AAIA,eAAe,SAASC,sBAAT,CAAgC;AAC7CC,EAAAA,QAD6C;AAE7CC,EAAAA,YAF6C;AAG7CC,EAAAA,KAH6C;AAI7CC,EAAAA,MAJ6C;AAK7CC,EAAAA;AAL6C,CAAhC,EAMZ;AACD,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,QAAMI,YAAY,GAAGb,WAAW,CAC7Bc,KAAD,IACEA,KAAK,CAACC,+BAAN,CAAsCC,IAAtC,CAA2CP,QAAQ,CAACQ,UAApD,CAF4B,CAAhC;AAKA,QAAM;AAAEC,IAAAA;AAAF,MAAsBL,YAA5B,CARC,CAUD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAEP,YAAY,CAAC,MAAM,CAAE,CAAT,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGY,eAAe,CAACC,OAAhB,CAAyBC,cAAD,IAAoB;AAC3CT,IAAAA,OAAO,CAACC,GAAR,CAAYS,aAAZ;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,QAAD;AAAU,MAAA,cAAc,EAAE,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGGD,cAHH,CAFF,CADF;AAUD,GAZA,CADH,eAcE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAdF,CADF;AAkBD","sourcesContent":["import React from \"react\";\nimport { multipleChoiceFormName } from \"../../../constants/constants\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Label, Checkbox, Button } from \"theme-ui\";\nimport { Controller } from \"react-hook-form\";\nimport { TRootState } from \"../../../types/exam\";\n\nexport default function MultipleChoiceQuestion({\n  register,\n  handleSubmit,\n  watch,\n  errors,\n  question,\n}) {\n  const dispatch = useDispatch();\n  console.log(question);\n  const questionBody = useSelector(\n    (state: TRootState) =>\n      state.questionBodyMultipleChoiceTable.byId[question.questionId]\n  );\n\n  const { possibleAnswers } = questionBody;\n\n  // const onSubmit = (data) => {\n  //   let action = undefined;\n  //   switch (answerType) {\n  //     case \"freeText\":\n  //       const answer = data[freeTextFromName];\n  //       const payload = { questionId, answer };\n  //       action = answerFreeTextQuestion(payload);\n  //       break;\n\n  //     default:\n  //       break;\n  //   }\n\n  //   dispatch(action);\n  //   dispatch(seTFreeTextQuestionEndTime({ questionId }));\n  //   dispatch(nexTFreeTextQuestion());\n  // };\n\n  return (\n    <form onSubmit={handleSubmit(() => {})}>\n      {possibleAnswers.forEach((possibleAnswer) => {\n        console.log(possibleAnser)\n        return (\n          <div>\n            aaaaaaaaaa\n            <Label>\n              {/* <Controller as={Checkbox} name={multipleChoiceFormName} /> */}\n              <Checkbox defaultChecked={true} />\n              {possibleAnswer}\n            </Label>\n          </div>\n        );\n      })}\n      <Button type=\"submit\">Save and Next Question</Button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}