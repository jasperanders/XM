{"ast":null,"code":"var _jsxFileName = \"/home/jasper/Documents/Uni/BachelorArbeit/XM/src/components/question/Question.tsx\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport FreeTextQuestion from \"./questionType/FreeTextQuestion\";\nimport { answerQuestion } from \"../../redux/actions\";\nexport default function Question({\n  question\n}) {\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm();\n  const {\n    questionId\n  } = question;\n\n  const onSubmit = data => {\n    const {\n      answerText,\n      ob\n    } = data;\n    console.log(data);\n    dispatch(answerQuestion({\n      questionId,\n      answerText: answerText\n    }));\n  };\n\n  const {\n    answerType,\n    questionText,\n    questionTitle\n  } = question;\n\n  const questionBody = () => {\n    switch (answerType) {\n      case \"freeText\":\n        return /*#__PURE__*/React.createElement(FreeTextQuestion, {\n          register: register,\n          handleSubmit: handleSubmit,\n          watch: watch,\n          errors: errors,\n          onSubmit: onSubmit,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 11\n          }\n        });\n\n      default:\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 16\n          }\n        }, \"Something went wrong\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, questionTitle), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, questionText), questionBody());\n}","map":{"version":3,"sources":["/home/jasper/Documents/Uni/BachelorArbeit/XM/src/components/question/Question.tsx"],"names":["React","useDispatch","useForm","FreeTextQuestion","answerQuestion","Question","question","dispatch","register","handleSubmit","watch","errors","questionId","onSubmit","data","answerText","ob","console","log","answerType","questionText","questionTitle","questionBody"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AAEA,SAASC,cAAT,QAA+B,qBAA/B;AAEA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAwC;AACrD,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM;AAAEO,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA;AAAjC,MAA4CT,OAAO,EAAzD;AAEA,QAAM;AAAEU,IAAAA;AAAF,MAAiBN,QAAvB;;AAEA,QAAMO,QAAQ,GAAIC,IAAD,IAAU;AACzB,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAAqBF,IAA3B;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAP,IAAAA,QAAQ,CAACH,cAAc,CAAC;AAAEQ,MAAAA,UAAF;AAAcG,MAAAA,UAAU,EAAEA;AAA1B,KAAD,CAAf,CAAR;AACD,GAJD;;AAMA,QAAM;AAAEI,IAAAA,UAAF;AAAcC,IAAAA,YAAd;AAA4BC,IAAAA;AAA5B,MAA8Cf,QAApD;;AAEA,QAAMgB,YAAY,GAAG,MAAM;AACzB,YAAQH,UAAR;AACE,WAAK,UAAL;AACE,4BACE,oBAAC,gBAAD;AACE,UAAA,QAAQ,EAAEX,QADZ;AAEE,UAAA,YAAY,EAAEC,YAFhB;AAGE,UAAA,KAAK,EAAEC,KAHT;AAIE,UAAA,MAAM,EAAEC,MAJV;AAKE,UAAA,QAAQ,EAAEE,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AASF;AACE,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAP;AAZJ;AAcD,GAfD;;AAiBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMQ,aAAN,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMD,YAAN,CAFF,EAGGE,YAAY,EAHf,CADF;AAOD","sourcesContent":["import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport FreeTextQuestion from \"./questionType/FreeTextQuestion\";\nimport { TQuestion } from \"../../types/exam\";\nimport { answerQuestion } from \"../../redux/actions\";\n\nexport default function Question({ question }: TProps) {\n  const dispatch = useDispatch();\n  const { register, handleSubmit, watch, errors } = useForm();\n\n  const { questionId } = question;\n\n  const onSubmit = (data) => {\n    const { answerText, ob } = data;\n    console.log(data);\n    dispatch(answerQuestion({ questionId, answerText: answerText, }));\n  };\n\n  const { answerType, questionText, questionTitle } = question;\n\n  const questionBody = () => {\n    switch (answerType) {\n      case \"freeText\":\n        return (\n          <FreeTextQuestion\n            register={register}\n            handleSubmit={handleSubmit}\n            watch={watch}\n            errors={errors}\n            onSubmit={onSubmit}\n          />\n        );\n      default:\n        return <div>Something went wrong</div>;\n    }\n  };\n\n  return (\n    <div>\n      <div>{questionTitle}</div>\n      <div>{questionText}</div>\n      {questionBody()}\n    </div>\n  );\n}\n\ninterface TProps {\n  question: TQuestion;\n}\n"]},"metadata":{},"sourceType":"module"}