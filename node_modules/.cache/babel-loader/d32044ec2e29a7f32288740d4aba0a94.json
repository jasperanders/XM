{"ast":null,"code":"var _jsxFileName = \"/home/jasper/Documents/Uni/BachelorArbeit/XM/src/components/question/questionType/MultipleChoice.tsx\";\nimport React from \"react\";\nimport { multipleChoiceFormName } from \"../../../constants/constants\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Label, Checkbox, Button } from \"theme-ui\";\nimport { v4 } from \"uuid\";\nimport { nextQuestion, answerMultipleChoiceQuestion } from \"../../../redux/actions\";\nexport default function MultipleChoiceQuestion({\n  register,\n  handleSubmit,\n  watch,\n  errors,\n  question\n}) {\n  const dispatch = useDispatch();\n  const questionBody = useSelector(state => state.questionBodyMultipleChoiceTable.byId[question.questionId]);\n  const currentExam = useSelector(state => state.examTable);\n  const {\n    currentExamId\n  } = useSelector(state => state.examState);\n  const {\n    possibleAnswers\n  } = questionBody;\n\n  const onSubmit = data => {\n    console.log(data);\n    dispatch(answerMultipleChoiceQuestion({\n      questionId,\n      selectedAnswers\n    })); // dispatch(setFreeTextQuestionEndTime({ questionId }));\n\n    dispatch(nextQuestion({\n      currentExam: currentExam.byId[currentExamId]\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, possibleAnswers.map((possibleAnswer, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      key: v4(),\n      defaultChecked: false,\n      name: multipleChoiceFormName + index,\n      ref: register,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }), possibleAnswer));\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"Save and Next Question\"));\n}","map":{"version":3,"sources":["/home/jasper/Documents/Uni/BachelorArbeit/XM/src/components/question/questionType/MultipleChoice.tsx"],"names":["React","multipleChoiceFormName","useDispatch","useSelector","Label","Checkbox","Button","v4","nextQuestion","answerMultipleChoiceQuestion","MultipleChoiceQuestion","register","handleSubmit","watch","errors","question","dispatch","questionBody","state","questionBodyMultipleChoiceTable","byId","questionId","currentExam","examTable","currentExamId","examState","possibleAnswers","onSubmit","data","console","log","selectedAnswers","map","possibleAnswer","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,sBAAT,QAAuC,8BAAvC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,UAAxC;AAEA,SAASC,EAAT,QAAmB,MAAnB;AACA,SACEC,YADF,EAEEC,4BAFF,QAGO,wBAHP;AAKA,eAAe,SAASC,sBAAT,CAAgC;AAC7CC,EAAAA,QAD6C;AAE7CC,EAAAA,YAF6C;AAG7CC,EAAAA,KAH6C;AAI7CC,EAAAA,MAJ6C;AAK7CC,EAAAA;AAL6C,CAAhC,EAMZ;AACD,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAMe,YAAY,GAAGd,WAAW,CAC7Be,KAAD,IACEA,KAAK,CAACC,+BAAN,CAAsCC,IAAtC,CAA2CL,QAAQ,CAACM,UAApD,CAF4B,CAAhC;AAIA,QAAMC,WAAW,GAAGnB,WAAW,CAAEe,KAAD,IAAuBA,KAAK,CAACK,SAA9B,CAA/B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAoBrB,WAAW,CAAEe,KAAD,IAAuBA,KAAK,CAACO,SAA9B,CAArC;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAsBT,YAA5B;;AAEA,QAAMU,QAAQ,GAAIC,IAAD,IAAU;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEAZ,IAAAA,QAAQ,CAACP,4BAA4B,CAAC;AAAEY,MAAAA,UAAF;AAAcU,MAAAA;AAAd,KAAD,CAA7B,CAAR,CAHyB,CAIzB;;AACAf,IAAAA,QAAQ,CAACR,YAAY,CAAC;AAAEc,MAAAA,WAAW,EAAEA,WAAW,CAACF,IAAZ,CAAiBI,aAAjB;AAAf,KAAD,CAAb,CAAR;AACD,GAND;;AAQA,sBACE;AAAM,IAAA,QAAQ,EAAEZ,YAAY,CAACe,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,eAAe,CAACM,GAAhB,CAAoB,CAACC,cAAD,EAAiBC,KAAjB,KAA2B;AAC9C,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,QAAD;AACE,MAAA,GAAG,EAAE3B,EAAE,EADT;AAEE,MAAA,cAAc,EAAE,KAFlB;AAGE,MAAA,IAAI,EAAEN,sBAAsB,GAAGiC,KAHjC;AAIE,MAAA,GAAG,EAAEvB,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAQGsB,cARH,CADF,CADF;AAcD,GAfA,CADH,eAiBE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAjBF,CADF;AAqBD","sourcesContent":["import React from \"react\";\nimport { multipleChoiceFormName } from \"../../../constants/constants\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Label, Checkbox, Button } from \"theme-ui\";\nimport { TRootState } from \"../../../types/examTypes\";\nimport { v4 } from \"uuid\";\nimport {\n  nextQuestion,\n  answerMultipleChoiceQuestion,\n} from \"../../../redux/actions\";\n\nexport default function MultipleChoiceQuestion({\n  register,\n  handleSubmit,\n  watch,\n  errors,\n  question,\n}) {\n  const dispatch = useDispatch();\n  const questionBody = useSelector(\n    (state: TRootState) =>\n      state.questionBodyMultipleChoiceTable.byId[question.questionId]\n  );\n  const currentExam = useSelector((state: TRootState) => state.examTable);\n  const { currentExamId } = useSelector((state: TRootState) => state.examState);\n\n  const { possibleAnswers } = questionBody;\n\n  const onSubmit = (data) => {\n    console.log(data);\n\n    dispatch(answerMultipleChoiceQuestion({ questionId, selectedAnswers }));\n    // dispatch(setFreeTextQuestionEndTime({ questionId }));\n    dispatch(nextQuestion({ currentExam: currentExam.byId[currentExamId] }));\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      {possibleAnswers.map((possibleAnswer, index) => {\n        return (\n          <div>\n            <Label>\n              {/* <Controller as={Checkbox} name={multipleChoiceFormName} /> */}\n              <Checkbox\n                key={v4()}\n                defaultChecked={false}\n                name={multipleChoiceFormName + index}\n                ref={register}\n              />\n              {possibleAnswer}\n            </Label>\n          </div>\n        );\n      })}\n      <Button type=\"submit\">Save and Next Question</Button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}