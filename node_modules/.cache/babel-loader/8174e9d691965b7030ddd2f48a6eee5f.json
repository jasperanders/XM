{"ast":null,"code":"var _jsxFileName = \"/home/jasper/Documents/Uni/BachelorArbeit/XM/frontend/src/components/make/Question/index.tsx\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Textarea, Button, Input } from \"theme-ui\";\nimport { useForm } from \"react-hook-form\";\nexport default function FreeTexTFreeTextQuestion() {\n  /**\n   * Redux Hooks\n   */\n  const dispatch = useDispatch();\n  const {\n    currentQuestionId\n  } = useSelector(state => state.examState);\n  const questionTable = useSelector(state => state.questionTable);\n  const questionBodyFreeTextTable = useSelector(state => state.questionBodyFreeTextTable);\n  let question = undefined;\n  let questionBody = undefined;\n\n  if (currentQuestionId) {\n    question = questionTable[curren];\n  }\n  /**\n   * Form Hook\n   */\n\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors,\n    reset,\n    getValues\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(\"submitted\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    ref: register,\n    name: \"questionTitle\",\n    placeholder: \"Provide a Question Title here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Textarea, {\n    rows: 5,\n    name: \"masterAnswer\",\n    placeholder: \"Provide a question here.\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Textarea, {\n    rows: 10,\n    name: \"masterAnswer\",\n    placeholder: \"Provide master Answer here\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    sx: {\n      marginRight: \"0.5rem\"\n    },\n    variant: \"warning\",\n    onClick: () => {\n      reset();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Clear\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"Save\"));\n}","map":{"version":3,"sources":["/home/jasper/Documents/Uni/BachelorArbeit/XM/frontend/src/components/make/Question/index.tsx"],"names":["React","useDispatch","useSelector","Textarea","Button","Input","useForm","FreeTexTFreeTextQuestion","dispatch","currentQuestionId","state","examState","questionTable","questionBodyFreeTextTable","question","undefined","questionBody","curren","register","handleSubmit","watch","errors","reset","getValues","onSubmit","data","console","log","marginRight"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAGA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,KAA3B,QAA8C,UAA9C;AAGA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,eAAe,SAASC,wBAAT,GAAoC;AACjD;;;AAIA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAwBP,WAAW,CACtCQ,KAAD,IAAuBA,KAAK,CAACC,SADU,CAAzC;AAGA,QAAMC,aAAa,GAAGV,WAAW,CAAEQ,KAAD,IAAuBA,KAAK,CAACE,aAA9B,CAAjC;AACA,QAAMC,yBAAyB,GAAGX,WAAW,CAC1CQ,KAAD,IAAuBA,KAAK,CAACG,yBADc,CAA7C;AAIA,MAAIC,QAAQ,GAAGC,SAAf;AACA,MAAIC,YAAY,GAAGD,SAAnB;;AAEA,MAAGN,iBAAH,EAAqB;AACnBK,IAAAA,QAAQ,GAAGF,aAAa,CAACK,MAAD,CAAxB;AACD;AAED;;;;;AAIA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA,MAAjC;AAAyCC,IAAAA,KAAzC;AAAgDC,IAAAA;AAAhD,MAA8DjB,OAAO,EAA3E;;AAEA,QAAMkB,QAAQ,GAAIC,IAAD,IAAU;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,GAFD;;AAIA,sBACE;AAAM,IAAA,QAAQ,EAAER,YAAY,CAACK,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,GAAG,EAAEN,QADP;AAEE,IAAA,IAAI,EAAE,eAFR;AAGE,IAAA,WAAW,EAAC,+BAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,QAAD;AACE,IAAA,IAAI,EAAE,CADR;AAEE,IAAA,IAAI,EAAE,cAFR;AAGE,IAAA,WAAW,EAAE,0BAHf;AAIE,IAAA,GAAG,EAAEA,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAYE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAE,EADR;AAEE,IAAA,IAAI,EAAE,cAFR;AAGE,IAAA,WAAW,EAAE,4BAHf;AAIE,IAAA,GAAG,EAAEA,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,eAkBE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAE;AAAEU,MAAAA,WAAW,EAAE;AAAf,KADN;AAEE,IAAA,OAAO,EAAC,SAFV;AAGE,IAAA,OAAO,EAAE,MAAM;AACbN,MAAAA,KAAK;AACN,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAlBF,eA2BE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA3BF,CADF;AA+BD","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { freeTextFormName } from \"../../../constants/constants\";\nimport { Textarea, Button, Input, Grid } from \"theme-ui\";\nimport { answerFreeTextQuestion, nextQuestion } from \"../../../redux/actions\";\nimport { TRootState } from \"../../../types/examTypes\";\nimport { useForm } from \"react-hook-form\";\n\nexport default function FreeTexTFreeTextQuestion() {\n  /**\n   * Redux Hooks\n   */\n\n  const dispatch = useDispatch();\n  const { currentQuestionId } = useSelector(\n    (state: TRootState) => state.examState\n  );\n  const questionTable = useSelector((state: TRootState) => state.questionTable);\n  const questionBodyFreeTextTable = useSelector(\n    (state: TRootState) => state.questionBodyFreeTextTable\n  );\n\n  let question = undefined;\n  let questionBody = undefined;\n  \n  if(currentQuestionId){\n    question = questionTable[curren]\n  }\n\n  /**\n   * Form Hook\n   */\n\n  const { register, handleSubmit, watch, errors, reset, getValues } = useForm();\n\n  const onSubmit = (data) => {\n    console.log(\"submitted\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Input\n        ref={register}\n        name={\"questionTitle\"}\n        placeholder=\"Provide a Question Title here\"\n      />\n      <Textarea\n        rows={5}\n        name={\"masterAnswer\"}\n        placeholder={\"Provide a question here.\"}\n        ref={register}\n      />\n      <Textarea\n        rows={10}\n        name={\"masterAnswer\"}\n        placeholder={\"Provide master Answer here\"}\n        ref={register}\n      />\n      <Button\n        sx={{ marginRight: \"0.5rem\" }}\n        variant=\"warning\"\n        onClick={() => {\n          reset();\n        }}\n      >\n        Clear\n      </Button>\n      <Button type=\"submit\">Save</Button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}