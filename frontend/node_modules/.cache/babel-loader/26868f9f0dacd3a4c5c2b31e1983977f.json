{"ast":null,"code":"var _jsxFileName = \"/home/jasper/Documents/Uni/BachelorArbeit/XM/src/components/timer/Timer.tsx\";\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setAppTimer } from \"../../redux/actions\";\nexport default function Timer({\n  questionId\n}) {\n  const dispatch = useDispatch();\n  const timeLimit = useSelector(state => state.questions.byId[questionId].timeLimit);\n  const {\n    timerIsActive,\n    currentTime\n  } = useSelector(state => state.appState);\n\n  const dispatchSetAppTimer = payload => dispatch(setAppTimer(payload));\n\n  useEffect(() => {\n    let interval = null;\n\n    if (timerIsActive) {\n      // if (currentTime === null) {\n      // dispatchSetAppTimer({ timeLimit: timeLimit });\n      interval = setInterval(() => {\n        console.log(currentTime);\n        let t = currentTime - 1;\n        dispatchSetAppTimer({\n          t\n        });\n      }, 1000); // }\n    }\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }\n  }, \"Time remaining: \", currentTime);\n}","map":{"version":3,"sources":["/home/jasper/Documents/Uni/BachelorArbeit/XM/src/components/timer/Timer.tsx"],"names":["React","useEffect","useSelector","useDispatch","setAppTimer","Timer","questionId","dispatch","timeLimit","state","questions","byId","timerIsActive","currentTime","appState","dispatchSetAppTimer","payload","interval","setInterval","console","log","t","clearInterval"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,WAAT,QAA4B,qBAA5B;AAEA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA+B;AAC5C,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,SAAS,GAAGN,WAAW,CAC1BO,KAAD,IAAuBA,KAAK,CAACC,SAAN,CAAgBC,IAAhB,CAAqBL,UAArB,EAAiCE,SAD7B,CAA7B;AAGA,QAAM;AAAEI,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAAiCX,WAAW,CAC/CO,KAAD,IAAuBA,KAAK,CAACK,QADmB,CAAlD;;AAIA,QAAMC,mBAAmB,GAAIC,OAAD,IAAaT,QAAQ,CAACH,WAAW,CAACY,OAAD,CAAZ,CAAjD;;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,QAAQ,GAAG,IAAf;;AACA,QAAIL,aAAJ,EAAmB;AACjB;AACA;AACAK,MAAAA,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC3BC,QAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ;AACA,YAAIQ,CAAC,GAAGR,WAAW,GAAG,CAAtB;AACAE,QAAAA,mBAAmB,CAAC;AAAEM,UAAAA;AAAF,SAAD,CAAnB;AACD,OAJqB,EAInB,IAJmB,CAAtB,CAHiB,CAQjB;AACD;;AACD,WAAO,MAAM;AACXC,MAAAA,aAAa,CAACL,QAAD,CAAb;AACD,KAFD;AAGD,GAfQ,EAeN,EAfM,CAAT;AAiBA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAsBJ,WAAtB,CAAP;AACD","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { TRootState } from \"../../types/exam\";\nimport { setAppTimer } from \"../../redux/actions\";\n\nexport default function Timer({ questionId }) {\n  const dispatch = useDispatch();\n  const timeLimit = useSelector(\n    (state: TRootState) => state.questions.byId[questionId].timeLimit\n  );\n  const { timerIsActive, currentTime } = useSelector(\n    (state: TRootState) => state.appState\n  );\n\n  const dispatchSetAppTimer = (payload) => dispatch(setAppTimer(payload));\n\n  useEffect(() => {\n    let interval = null;\n    if (timerIsActive) {\n      // if (currentTime === null) {\n      // dispatchSetAppTimer({ timeLimit: timeLimit });\n      interval = setInterval(() => {\n        console.log(currentTime);\n        let t = currentTime - 1;\n        dispatchSetAppTimer({ t });\n      }, 1000);\n      // }\n    }\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return <div>Time remaining: {currentTime}</div>;\n}\n"]},"metadata":{},"sourceType":"module"}