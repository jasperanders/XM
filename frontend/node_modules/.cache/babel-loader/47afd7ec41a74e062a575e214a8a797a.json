{"ast":null,"code":"var _jsxFileName = \"/home/jasper/Documents/Uni/BachelorArbeit/XM/src/components/question/Question.tsx\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport FreeTextQuestion from \"./questionType/FreeTextQuestion\";\nimport { Heading } from \"theme-ui\";\nimport Timer from \"../timer/Timer\";\nimport { seTFreeTextQuestionStartTime } from \"../../redux/actions\";\nexport default function Question({\n  question\n}) {\n  const dispatch = useDispatch();\n  const {\n    currentExam,\n    byId\n  } = useSelector(state => state.exams);\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors,\n    reset\n  } = useForm();\n  const {\n    questionId,\n    answerType,\n    questionText,\n    questionTitle\n  } = question;\n  useEffect(() => {\n    dispatch(seTFreeTextQuestionStartTime({\n      questionId\n    }));\n    reset();\n  }, [questionId]);\n\n  const questionBody = () => {\n    switch (answerType) {\n      case \"freeText\":\n        const freeTextQuesti;\n        return /*#__PURE__*/React.createElement(FreeTextQuestion, {\n          register: register,\n          handleSubmit: handleSubmit,\n          watch: watch,\n          errors: errors,\n          question: question,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }\n        });\n\n      default:\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 16\n          }\n        }, \"Something went wrong\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    as: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, questionTitle), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, questionText), questionBody(), /*#__PURE__*/React.createElement(Timer, {\n    question: question,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/jasper/Documents/Uni/BachelorArbeit/XM/src/components/question/Question.tsx"],"names":["React","useEffect","useDispatch","useSelector","useForm","FreeTextQuestion","Heading","Timer","seTFreeTextQuestionStartTime","Question","question","dispatch","currentExam","byId","state","exams","register","handleSubmit","watch","errors","reset","questionId","answerType","questionText","questionTitle","questionBody","freeTextQuesti"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AAMA,SAASC,OAAT,QAAwB,UAAxB;AAEA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,SAASC,4BAAT,QAA6C,qBAA7C;AAEA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAgC;AAC7C,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AAEA,QAAM;AAAEU,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAwBV,WAAW,CAAEW,KAAD,IAAuBA,KAAK,CAACC,KAA9B,CAAzC;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA,MAAjC;AAAyCC,IAAAA;AAAzC,MAAmDhB,OAAO,EAAhE;AAEA,QAAM;AAAEiB,IAAAA,UAAF;AAAcC,IAAAA,UAAd;AAA0BC,IAAAA,YAA1B;AAAwCC,IAAAA;AAAxC,MAA0Dd,QAAhE;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAACH,4BAA4B,CAAC;AAAEa,MAAAA;AAAF,KAAD,CAA7B,CAAR;AACAD,IAAAA,KAAK;AACN,GAHQ,EAGN,CAACC,UAAD,CAHM,CAAT;;AAKA,QAAMI,YAAY,GAAG,MAAM;AACzB,YAAQH,UAAR;AACE,WAAK,UAAL;AACE,cAAMI,cAAN;AACA,4BACE,oBAAC,gBAAD;AACE,UAAA,QAAQ,EAAEV,QADZ;AAEE,UAAA,YAAY,EAAEC,YAFhB;AAGE,UAAA,KAAK,EAAEC,KAHT;AAIE,UAAA,MAAM,EAAEC,MAJV;AAKE,UAAA,QAAQ,EAAET,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AASF;AACE,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAP;AAbJ;AAeD,GAhBD;;AAkBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAE,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBc,aAApB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,YAAJ,CAFF,EAGGE,YAAY,EAHf,eAIE,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAEf,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport FreeTextQuestion from \"./questionType/FreeTextQuestion\";\nimport {\n  TFreeTextQuestion,\n  TRootState,\n  TMultipleChoiceQuestion,\n} from \"../../types/exam\";\nimport { Heading } from \"theme-ui\";\n\nimport Timer from \"../timer/Timer\";\nimport { freeTextFromName } from \"../../constants/formConstants\";\nimport { seTFreeTextQuestionStartTime } from \"../../redux/actions\";\n\nexport default function Question({ question }) {\n  const dispatch = useDispatch();\n\n  const { currentExam, byId } = useSelector((state: TRootState) => state.exams);\n  const { register, handleSubmit, watch, errors, reset } = useForm();\n\n  const { questionId, answerType, questionText, questionTitle } = question;\n\n  useEffect(() => {\n    dispatch(seTFreeTextQuestionStartTime({ questionId }));\n    reset();\n  }, [questionId]);\n\n  const questionBody = () => {\n    switch (answerType) {\n      case \"freeText\":\n        const freeTextQuesti\n        return (\n          <FreeTextQuestion\n            register={register}\n            handleSubmit={handleSubmit}\n            watch={watch}\n            errors={errors}\n            question={question}\n          />\n        );\n      default:\n        return <div>Something went wrong</div>;\n    }\n  };\n\n  return (\n    <div>\n      <Heading as={\"h2\"}>{questionTitle}</Heading>\n      <p>{questionText}</p>\n      {questionBody()}\n      <Timer question={question}></Timer>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}