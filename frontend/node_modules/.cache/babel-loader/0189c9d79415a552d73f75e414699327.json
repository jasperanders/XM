{"ast":null,"code":"import { combineReducers } from \"@reduxjs/toolkit\";\nimport { ANSWER_QUESTION, START_TIMER, END_TIMER, PREVIOUS_QUESTION, NEXT_QUESTION } from \"./actions\";\nimport { initialState } from \"./initialState\";\n\nfunction answer(state = \"\", {\n  type,\n  payload\n}) {\n  switch (type) {\n    case ANSWER_QUESTION:\n      return state;\n\n    default:\n      return state;\n  }\n}\n\nfunction time(state = 0, {\n  type,\n  payload\n}) {\n  switch (type) {\n    case START_TIMER:\n      return state;\n\n    case END_TIMER:\n      return state;\n\n    default:\n      return state;\n  }\n}\n\nconst questions = combineReducers({\n  answer,\n  time\n});\n\nfunction current(state = 0, {\n  type,\n  payload\n}) {\n  switch (type) {\n    case PREVIOUS_QUESTION:\n      return state;\n\n    case NEXT_QUESTION:\n      return state;\n\n    default:\n      return state;\n  }\n}\n\nfunction exam(state = initialState, {\n  type,\n  payload\n}) {\n  switch (type) {\n    case S:\n      break;\n\n    default:\n      break;\n  }\n}\n\nexport const rootReducer = combineReducers({\n  exam\n});\nexport default rootReducer;","map":{"version":3,"sources":["/home/jasper/Documents/Uni/BachelorArbeit/my-app/src/app/reducers.ts"],"names":["combineReducers","ANSWER_QUESTION","START_TIMER","END_TIMER","PREVIOUS_QUESTION","NEXT_QUESTION","initialState","answer","state","type","payload","time","questions","current","exam","S","rootReducer"],"mappings":"AAAA,SAASA,eAAT,QAAgC,kBAAhC;AACA,SACEC,eADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,iBAJF,EAKEC,aALF,QAMO,WANP;AAOA,SAASC,YAAT,QAA6B,gBAA7B;;AAEA,SAASC,MAAT,CAAgBC,KAAa,GAAG,EAAhC,EAAoC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAApC,EAAuD;AACrD,UAAQD,IAAR;AACE,SAAKR,eAAL;AACE,aAAOO,KAAP;;AAEF;AACE,aAAOA,KAAP;AALJ;AAOD;;AAED,SAASG,IAAT,CAAcH,KAAa,GAAG,CAA9B,EAAiC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAjC,EAAoD;AAClD,UAAQD,IAAR;AACE,SAAKP,WAAL;AACE,aAAOM,KAAP;;AAEF,SAAKL,SAAL;AACE,aAAOK,KAAP;;AAEF;AACE,aAAOA,KAAP;AARJ;AAUD;;AAED,MAAMI,SAAS,GAAGZ,eAAe,CAAC;AAChCO,EAAAA,MADgC;AAEhCI,EAAAA;AAFgC,CAAD,CAAjC;;AAKA,SAASE,OAAT,CAAiBL,KAAK,GAAG,CAAzB,EAA4B;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAA5B,EAA+C;AAC7C,UAAQD,IAAR;AACE,SAAKL,iBAAL;AACE,aAAOI,KAAP;;AACF,SAAKH,aAAL;AACE,aAAOG,KAAP;;AAEF;AACE,aAAOA,KAAP;AAPJ;AASD;;AAED,SAASM,IAAT,CAAcN,KAAK,GAACF,YAApB,EAAiC;AAACG,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAjC,EAAkD;AAChD,UAAQD,IAAR;AACE,SAAKM,CAAL;AAEE;;AAEF;AACE;AANJ;AAQD;;AAED,OAAO,MAAMC,WAAW,GAAGhB,eAAe,CAAC;AACzCc,EAAAA;AADyC,CAAD,CAAnC;AAIP,eAAeE,WAAf","sourcesContent":["import { combineReducers } from \"@reduxjs/toolkit\";\nimport {\n  ANSWER_QUESTION,\n  START_TIMER,\n  END_TIMER,\n  PREVIOUS_QUESTION,\n  NEXT_QUESTION,\n} from \"./actions\";\nimport { initialState } from \"./initialState\";\n\nfunction answer(state: string = \"\", { type, payload }) {\n  switch (type) {\n    case ANSWER_QUESTION:\n      return state;\n\n    default:\n      return state;\n  }\n}\n\nfunction time(state: number = 0, { type, payload }) {\n  switch (type) {\n    case START_TIMER:\n      return state;\n\n    case END_TIMER:\n      return state;\n\n    default:\n      return state;\n  }\n}\n\nconst questions = combineReducers({\n  answer,\n  time,\n});\n\nfunction current(state = 0, { type, payload }) {\n  switch (type) {\n    case PREVIOUS_QUESTION:\n      return state;\n    case NEXT_QUESTION:\n      return state;\n\n    default:\n      return state;\n  }\n}\n\nfunction exam(state=initialState,{type, payload}) {\n  switch (type) {\n    case S:\n      \n      break;\n  \n    default:\n      break;\n  }\n}\n\nexport const rootReducer = combineReducers({\n  exam,\n});\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}