{"ast":null,"code":"var _jsxFileName = \"/home/jasper/Documents/Uni/BachelorArbeit/XM/src/components/timer/Timer.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { store } from \"../../index\";\nexport default function Timer({\n  question\n}) {\n  const {\n    timeStart,\n    timeLimit,\n    questionId\n  } = question;\n  const now = Date.now();\n  const [timeLeft, setTimeLeft] = useState(timeStart ? Math.trunc(timeLimit - (now - timeStart) / 1000) : timeLimit);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = Date.now();\n      const timeStart = store.getState().questions.byId[questionId].timeStart;\n      setTimeLeft(Math.trunc(timeLimit - (now - timeStart) / 1000));\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [question.questionId]);\n  return /*#__PURE__*/React.createElement(H3, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }\n  }, timeLeft);\n}","map":{"version":3,"sources":["/home/jasper/Documents/Uni/BachelorArbeit/XM/src/components/timer/Timer.tsx"],"names":["React","useEffect","useState","store","Timer","question","timeStart","timeLimit","questionId","now","Date","timeLeft","setTimeLeft","Math","trunc","interval","setInterval","getState","questions","byId","clearInterval"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,KAAT,QAAsB,aAAtB;AAEA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAAqC;AAClD,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,SAAb;AAAwBC,IAAAA;AAAxB,MAAuCH,QAA7C;AACA,QAAMI,GAAG,GAAGC,IAAI,CAACD,GAAL,EAAZ;AAEA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CACtCI,SAAS,GAAGO,IAAI,CAACC,KAAL,CAAWP,SAAS,GAAG,CAACE,GAAG,GAAGH,SAAP,IAAoB,IAA3C,CAAH,GAAsDC,SADzB,CAAxC;AAIAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjC,YAAMP,GAAG,GAAGC,IAAI,CAACD,GAAL,EAAZ;AACA,YAAMH,SAAS,GAAGH,KAAK,CAACc,QAAN,GAAiBC,SAAjB,CAA2BC,IAA3B,CAAgCX,UAAhC,EAA4CF,SAA9D;AACAM,MAAAA,WAAW,CAACC,IAAI,CAACC,KAAL,CAAWP,SAAS,GAAG,CAACE,GAAG,GAAGH,SAAP,IAAoB,IAA3C,CAAD,CAAX;AACD,KAJ2B,EAIzB,IAJyB,CAA5B;AAMA,WAAO,MAAM;AACXc,MAAAA,aAAa,CAACL,QAAD,CAAb;AACD,KAFD;AAGD,GAVQ,EAUN,CAACV,QAAQ,CAACG,UAAV,CAVM,CAAT;AAYA,sBAAO,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,QAAL,CAAP;AACD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { TQuestion } from \"../../types/exam\";\nimport { store } from \"../../index\";\n\nexport default function Timer({ question }: TProps) {\n  const { timeStart, timeLimit, questionId } = question;\n  const now = Date.now();\n\n  const [timeLeft, setTimeLeft] = useState(\n    timeStart ? Math.trunc(timeLimit - (now - timeStart) / 1000) : timeLimit\n  );\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = Date.now();\n      const timeStart = store.getState().questions.byId[questionId].timeStart;\n      setTimeLeft(Math.trunc(timeLimit - (now - timeStart) / 1000));\n    }, 1000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [question.questionId]);\n\n  return <H3>{timeLeft}</H3>;\n}\n\ninterface TProps {\n  question: TQuestion;\n}\n"]},"metadata":{},"sourceType":"module"}