{"ast":null,"code":"var _jsxFileName = \"/home/jasper/Documents/Uni/BachelorArbeit/XM/src/components/question/questionType/FreeTextQuestion.tsx\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { freeTextFormName } from \"../../../constants/constants\";\nimport { Textarea, Button } from \"theme-ui\";\nimport { answerFreeTextQuestion, nextFreeTextQuestion } from \"../../../redux/actions\";\nexport default function FreeTexTFreeTextQuestion({\n  register,\n  handleSubmit,\n  watch,\n  errors,\n  question\n}) {\n  const dispatch = useDispatch();\n  const {\n    questionId\n  } = question;\n\n  const onSubmit = data => {\n    const answer = data[freeTextFormName];\n    const payload = {\n      questionId,\n      answer\n    };\n    dispatch(answerFreeTextQuestion(payload));\n    dispatch(nextFreeTextQuestion);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Textarea, {\n    rows: 10,\n    columns: 20,\n    onPaste: e => {\n      e.preventDefault();\n      return false;\n    },\n    onCopy: e => {\n      e.preventDefault();\n      return false;\n    },\n    name: freeTextFormName,\n    defaultValue: question.storedAnswer,\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Save and Next Question\"));\n}","map":{"version":3,"sources":["/home/jasper/Documents/Uni/BachelorArbeit/XM/src/components/question/questionType/FreeTextQuestion.tsx"],"names":["React","useDispatch","freeTextFormName","Textarea","Button","answerFreeTextQuestion","nextFreeTextQuestion","FreeTexTFreeTextQuestion","register","handleSubmit","watch","errors","question","dispatch","questionId","onSubmit","data","answer","payload","e","preventDefault","storedAnswer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAAyC,aAAzC;AAEA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,UAAjC;AACA,SAASC,sBAAT,EAAiCC,oBAAjC,QAA6D,wBAA7D;AAEA,eAAe,SAASC,wBAAT,CAAkC;AAC/CC,EAAAA,QAD+C;AAE/CC,EAAAA,YAF+C;AAG/CC,EAAAA,KAH+C;AAI/CC,EAAAA,MAJ+C;AAK/CC,EAAAA;AAL+C,CAAlC,EAMZ;AACD,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AAEA,QAAM;AAAEa,IAAAA;AAAF,MAAiBF,QAAvB;;AAEA,QAAMG,QAAQ,GAAIC,IAAD,IAAU;AACzB,UAAMC,MAAM,GAAGD,IAAI,CAACd,gBAAD,CAAnB;AACA,UAAMgB,OAAO,GAAG;AAAEJ,MAAAA,UAAF;AAAcG,MAAAA;AAAd,KAAhB;AACAJ,IAAAA,QAAQ,CAACR,sBAAsB,CAACa,OAAD,CAAvB,CAAR;AACAL,IAAAA,QAAQ,CAACP,oBAAD,CAAR;AACD,GALD;;AAOA,sBACE;AAAM,IAAA,QAAQ,EAAEG,YAAY,CAACM,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAE,EADR;AAEE,IAAA,OAAO,EAAE,EAFX;AAGE,IAAA,OAAO,EAAGI,CAAD,IAAO;AACdA,MAAAA,CAAC,CAACC,cAAF;AACA,aAAO,KAAP;AACD,KANH;AAOE,IAAA,MAAM,EAAGD,CAAD,IAAO;AACbA,MAAAA,CAAC,CAACC,cAAF;AACA,aAAO,KAAP;AACD,KAVH;AAWE,IAAA,IAAI,EAAElB,gBAXR;AAYE,IAAA,YAAY,EAAEU,QAAQ,CAACS,YAZzB;AAaE,IAAA,GAAG,EAAEb,QAbP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAgBE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAhBF,CADF;AAoBD","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { freeTextFormName } from \"../../../constants/constants\";\nimport { Textarea, Button } from \"theme-ui\";\nimport { answerFreeTextQuestion, nextFreeTextQuestion } from \"../../../redux/actions\";\n\nexport default function FreeTexTFreeTextQuestion({\n  register,\n  handleSubmit,\n  watch,\n  errors,\n  question,\n}) {\n  const dispatch = useDispatch();\n\n  const { questionId } = question;\n\n  const onSubmit = (data) => {\n    const answer = data[freeTextFormName];\n    const payload = { questionId, answer };\n    dispatch(answerFreeTextQuestion(payload));\n    dispatch(nextFreeTextQuestion)\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Textarea\n        rows={10}\n        columns={20}\n        onPaste={(e) => {\n          e.preventDefault();\n          return false;\n        }}\n        onCopy={(e) => {\n          e.preventDefault();\n          return false;\n        }}\n        name={freeTextFormName}\n        defaultValue={question.storedAnswer}\n        ref={register}\n      />\n      <Button type=\"submit\">Save and Next Question</Button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}