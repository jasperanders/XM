{"ast":null,"code":"var _jsxFileName = \"/home/jasper/Documents/Uni/BachelorArbeit/XM/src/components/question/questionType/FreeTextQuestion.tsx\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { freeTextFormName } from \"../../../constants/constants\";\nimport { Textarea, Button } from \"theme-ui\";\nimport { answerFreeTextQuestion, nextQuestion } from \"../../../redux/actions\";\nexport default function FreeTexTFreeTextQuestion({\n  register,\n  handleSubmit,\n  watch,\n  errors,\n  question\n}) {\n  const {\n    questionId\n  } = question;\n  const dispatch = useDispatch();\n  const currentExam = useSelector(state => state.examTable);\n  const {\n    currentExamId\n  } = useSelector(state => state.examState);\n  console.log();\n\n  const onSubmit = data => {\n    const answer = data[freeTextFormName];\n    const payload = {\n      questionId,\n      answer\n    };\n    dispatch(answerFreeTextQuestion(payload));\n    dispatch(nextQuestion({\n      currentExam: currentExam.byId[currentExamId]\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Textarea, {\n    rows: 10,\n    columns: 20,\n    onPaste: e => {\n      e.preventDefault();\n      return false;\n    },\n    onCopy: e => {\n      e.preventDefault();\n      return false;\n    },\n    name: freeTextFormName,\n    defaultValue: question.storedAnswer,\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Save and Next Question\"));\n}","map":{"version":3,"sources":["/home/jasper/Documents/Uni/BachelorArbeit/XM/src/components/question/questionType/FreeTextQuestion.tsx"],"names":["React","useDispatch","useSelector","freeTextFormName","Textarea","Button","answerFreeTextQuestion","nextQuestion","FreeTexTFreeTextQuestion","register","handleSubmit","watch","errors","question","questionId","dispatch","currentExam","state","examTable","currentExamId","examState","console","log","onSubmit","data","answer","payload","byId","e","preventDefault","storedAnswer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,UAAjC;AACA,SAASC,sBAAT,EAAiCC,YAAjC,QAAqD,wBAArD;AAGA,eAAe,SAASC,wBAAT,CAAkC;AAC/CC,EAAAA,QAD+C;AAE/CC,EAAAA,YAF+C;AAG/CC,EAAAA,KAH+C;AAI/CC,EAAAA,MAJ+C;AAK/CC,EAAAA;AAL+C,CAAlC,EAMZ;AACD,QAAM;AAAEC,IAAAA;AAAF,MAAiBD,QAAvB;AACA,QAAME,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAMe,WAAW,GAAGd,WAAW,CAAEe,KAAD,IAAuBA,KAAK,CAACC,SAA9B,CAA/B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAoBjB,WAAW,CAAEe,KAAD,IAAuBA,KAAK,CAACG,SAA9B,CAArC;AAEAC,EAAAA,OAAO,CAACC,GAAR;;AACA,QAAMC,QAAQ,GAAIC,IAAD,IAAU;AACzB,UAAMC,MAAM,GAAGD,IAAI,CAACrB,gBAAD,CAAnB;AACA,UAAMuB,OAAO,GAAG;AAAEZ,MAAAA,UAAF;AAAcW,MAAAA;AAAd,KAAhB;AACAV,IAAAA,QAAQ,CAACT,sBAAsB,CAACoB,OAAD,CAAvB,CAAR;AACAX,IAAAA,QAAQ,CAACR,YAAY,CAAC;AAAES,MAAAA,WAAW,EAAEA,WAAW,CAACW,IAAZ,CAAiBR,aAAjB;AAAf,KAAD,CAAb,CAAR;AACD,GALD;;AAOA,sBACE;AAAM,IAAA,QAAQ,EAAET,YAAY,CAACa,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAE,EADR;AAEE,IAAA,OAAO,EAAE,EAFX;AAGE,IAAA,OAAO,EAAGK,CAAD,IAAO;AACdA,MAAAA,CAAC,CAACC,cAAF;AACA,aAAO,KAAP;AACD,KANH;AAOE,IAAA,MAAM,EAAGD,CAAD,IAAO;AACbA,MAAAA,CAAC,CAACC,cAAF;AACA,aAAO,KAAP;AACD,KAVH;AAWE,IAAA,IAAI,EAAE1B,gBAXR;AAYE,IAAA,YAAY,EAAEU,QAAQ,CAACiB,YAZzB;AAaE,IAAA,GAAG,EAAErB,QAbP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAgBE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAhBF,CADF;AAoBD","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { freeTextFormName } from \"../../../constants/constants\";\nimport { Textarea, Button } from \"theme-ui\";\nimport { answerFreeTextQuestion, nextQuestion } from \"../../../redux/actions\";\nimport { TRootState } from \"../../../types/exam\";\n\nexport default function FreeTexTFreeTextQuestion({\n  register,\n  handleSubmit,\n  watch,\n  errors,\n  question,\n}) {\n  const { questionId } = question;\n  const dispatch = useDispatch();\n  const currentExam = useSelector((state: TRootState) => state.examTable);\n  const { currentExamId } = useSelector((state: TRootState) => state.examState);\n\n  console.log();\n  const onSubmit = (data) => {\n    const answer = data[freeTextFormName];\n    const payload = { questionId, answer };\n    dispatch(answerFreeTextQuestion(payload));\n    dispatch(nextQuestion({ currentExam: currentExam.byId[currentExamId] }));\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Textarea\n        rows={10}\n        columns={20}\n        onPaste={(e) => {\n          e.preventDefault();\n          return false;\n        }}\n        onCopy={(e) => {\n          e.preventDefault();\n          return false;\n        }}\n        name={freeTextFormName}\n        defaultValue={question.storedAnswer}\n        ref={register}\n      />\n      <Button type=\"submit\">Save and Next Question</Button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}