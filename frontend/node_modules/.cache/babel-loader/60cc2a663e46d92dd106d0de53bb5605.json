{"ast":null,"code":"var _jsxFileName = \"/home/jasper/Documents/Uni/BachelorArbeit/XM/src/components/timer/Timer.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setAppTimer, countDownAppTimer } from \"../../redux/actions\";\nexport default function Timer({\n  question\n}) {\n  const dispatch = useDispatch();\n  const timeLimit = useSelector(state => state.questions.byId[questionId].timeLimit);\n  const {\n    timerIsActive,\n    currentTime\n  } = useSelector(state => state.appState);\n  const [timeLeft, setTimeLeft] = useState(10);\n\n  const dispatchSetAppTimer = payload => dispatch(setAppTimer(payload));\n\n  const dispatchCountDownAppTimer = payload => dispatch(countDownAppTimer(payload));\n\n  useEffect(() => {\n    let interval = null;\n    interval = setInterval(() => {\n      setTimeLeft(time => time - 1);\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [questionId]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }\n  }, \"Time remaining: \", timeLeft);\n}","map":{"version":3,"sources":["/home/jasper/Documents/Uni/BachelorArbeit/XM/src/components/timer/Timer.tsx"],"names":["React","useEffect","useState","useSelector","useDispatch","setAppTimer","countDownAppTimer","Timer","question","dispatch","timeLimit","state","questions","byId","questionId","timerIsActive","currentTime","appState","timeLeft","setTimeLeft","dispatchSetAppTimer","payload","dispatchCountDownAppTimer","interval","setInterval","time","clearInterval"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,WAAT,EAAsBC,iBAAtB,QAA+C,qBAA/C;AAGA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAAiC;AAC9C,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,SAAS,GAAGP,WAAW,CAC1BQ,KAAD,IAAuBA,KAAK,CAACC,SAAN,CAAgBC,IAAhB,CAAqBC,UAArB,EAAiCJ,SAD7B,CAA7B;AAGA,QAAM;AAAEK,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAAiCb,WAAW,CAC/CQ,KAAD,IAAuBA,KAAK,CAACM,QADmB,CAAlD;AAKA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMkB,mBAAmB,GAAIC,OAAD,IAAaZ,QAAQ,CAACJ,WAAW,CAACgB,OAAD,CAAZ,CAAjD;;AACA,QAAMC,yBAAyB,GAAID,OAAD,IAChCZ,QAAQ,CAACH,iBAAiB,CAACe,OAAD,CAAlB,CADV;;AAGApB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIsB,QAAQ,GAAG,IAAf;AACAA,IAAAA,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC3BL,MAAAA,WAAW,CAAEM,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAX;AACD,KAFqB,EAEnB,IAFmB,CAAtB;AAIA,WAAO,MAAM;AACXC,MAAAA,aAAa,CAACH,QAAD,CAAb;AACD,KAFD;AAGD,GATQ,EASN,CAACT,UAAD,CATM,CAAT;AAWA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAsBI,QAAtB,CAAP;AACD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { TRootState } from \"../../types/exam\";\nimport { setAppTimer, countDownAppTimer } from \"../../redux/actions\";\nimport { store } from \"../../index\";\n\nexport default function Timer({ question}: TQu) {\n  const dispatch = useDispatch();\n  const timeLimit = useSelector(\n    (state: TRootState) => state.questions.byId[questionId].timeLimit\n  );\n  const { timerIsActive, currentTime } = useSelector(\n    (state: TRootState) => state.appState\n  );\n\n\n  const [timeLeft, setTimeLeft] = useState(10);\n\n  const dispatchSetAppTimer = (payload) => dispatch(setAppTimer(payload));\n  const dispatchCountDownAppTimer = (payload) =>\n    dispatch(countDownAppTimer(payload));\n\n  useEffect(() => {\n    let interval = null;\n    interval = setInterval(() => {\n      setTimeLeft((time) => time - 1);\n    }, 1000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [questionId]);\n\n  return <div>Time remaining: {timeLeft}</div>;\n}\n\ninterface TProps {\n  question: TQuestion;\n}"]},"metadata":{},"sourceType":"module"}