{"ast":null,"code":"var _jsxFileName = \"/home/jasper/Documents/Uni/BachelorArbeit/XM/src/components/question/questionType/MultipleChoice.tsx\";\nimport React from \"react\";\nimport { multipleChoiceFormName } from \"../../../constants/constants\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Label, Checkbox, Button } from \"theme-ui\";\nimport { Controller } from \"react-hook-form\";\nexport default function MultipleChoiceQuestion({\n  register,\n  handleSubmit,\n  watch,\n  errors,\n  question\n}) {\n  const dispatch = useDispatch();\n  console.log(question);\n  const currentQuestionId = useSelector(state => state.questionBodyMultipleChoiceTable.by[question.questionId]);\n  const {\n    possibleAnswers\n  } = question; // const onSubmit = (data) => {\n  //   let action = undefined;\n  //   switch (answerType) {\n  //     case \"freeText\":\n  //       const answer = data[freeTextFromName];\n  //       const payload = { questionId, answer };\n  //       action = answerFreeTextQuestion(payload);\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  //   dispatch(action);\n  //   dispatch(seTFreeTextQuestionEndTime({ questionId }));\n  //   dispatch(nexTFreeTextQuestion());\n  // };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(() => {}),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, possibleAnswers.forEach(possibleAnswer => /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Controller, {\n    as: Checkbox,\n    name: multipleChoiceFormName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    defaultChecked: true,\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }), possibleAnswer)), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Save and Next Question\"));\n}","map":{"version":3,"sources":["/home/jasper/Documents/Uni/BachelorArbeit/XM/src/components/question/questionType/MultipleChoice.tsx"],"names":["React","multipleChoiceFormName","useDispatch","useSelector","Label","Checkbox","Button","Controller","MultipleChoiceQuestion","register","handleSubmit","watch","errors","question","dispatch","console","log","currentQuestionId","state","questionBodyMultipleChoiceTable","by","questionId","possibleAnswers","forEach","possibleAnswer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,sBAAT,QAAuC,8BAAvC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,UAAxC;AACA,SAASC,UAAT,QAA2B,iBAA3B;AAGA,eAAe,SAASC,sBAAT,CAAgC;AAC7CC,EAAAA,QAD6C;AAE7CC,EAAAA,YAF6C;AAG7CC,EAAAA,KAH6C;AAI7CC,EAAAA,MAJ6C;AAK7CC,EAAAA;AAL6C,CAAhC,EAMZ;AACD,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,QAAMI,iBAAiB,GAAGd,WAAW,CAClCe,KAAD,IACEA,KAAK,CAACC,+BAAN,CAAsCC,EAAtC,CAAyCP,QAAQ,CAACQ,UAAlD,CAFiC,CAArC;AAKA,QAAM;AAAEC,IAAAA;AAAF,MAAsBT,QAA5B,CARC,CAUD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAEH,YAAY,CAAC,MAAM,CAAE,CAAT,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGY,eAAe,CAACC,OAAhB,CAAyBC,cAAD,iBACvB,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAEnB,QAAhB;AAA0B,IAAA,IAAI,EAAEJ,sBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,QAAD;AAAU,IAAA,cAAc,EAAE,IAA1B;AAAgC,IAAA,GAAG,EAAEQ,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGe,cAHH,CADD,CADH,eAQE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BARF,CADF;AAYD","sourcesContent":["import React from \"react\";\nimport { multipleChoiceFormName } from \"../../../constants/constants\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Label, Checkbox, Button } from \"theme-ui\";\nimport { Controller } from \"react-hook-form\";\nimport { TRootState } from \"../../../types/exam\";\n\nexport default function MultipleChoiceQuestion({\n  register,\n  handleSubmit,\n  watch,\n  errors,\n  question,\n}) {\n  const dispatch = useDispatch();\n  console.log(question);\n  const currentQuestionId = useSelector(\n    (state: TRootState) =>\n      state.questionBodyMultipleChoiceTable.by[question.questionId]\n  );\n\n  const { possibleAnswers } = question;\n\n  // const onSubmit = (data) => {\n  //   let action = undefined;\n  //   switch (answerType) {\n  //     case \"freeText\":\n  //       const answer = data[freeTextFromName];\n  //       const payload = { questionId, answer };\n  //       action = answerFreeTextQuestion(payload);\n  //       break;\n\n  //     default:\n  //       break;\n  //   }\n\n  //   dispatch(action);\n  //   dispatch(seTFreeTextQuestionEndTime({ questionId }));\n  //   dispatch(nexTFreeTextQuestion());\n  // };\n\n  return (\n    <form onSubmit={handleSubmit(() => {})}>\n      {possibleAnswers.forEach((possibleAnswer) => (\n        <Label>\n          <Controller as={Checkbox} name={multipleChoiceFormName} />\n          <Checkbox defaultChecked={true} ref={register} />\n          {possibleAnswer}\n        </Label>\n      ))}\n      <Button type=\"submit\">Save and Next Question</Button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}